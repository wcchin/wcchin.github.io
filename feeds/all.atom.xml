<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Chin.Mini Lab</title><link href="https://wcchin.github.io/" rel="alternate"></link><link href="https://wcchin.github.io/feeds/all.atom.xml" rel="self"></link><id>https://wcchin.github.io/</id><updated>2017-04-16T00:00:00+08:00</updated><entry><title>Playing with TGOD</title><link href="https://wcchin.github.io/playing-with-tgod.html" rel="alternate"></link><published>2017-04-16T00:00:00+08:00</published><updated>2017-04-16T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-04-16:/playing-with-tgod.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;TGOD is a python package that can download some Taiwan open data. Here I am playing with the Taipei bus api and youbike api. The result is as the link show: 
&lt;a href="http:140.112.64.67:2170"&gt;a demo site of the usage of TGOD&lt;/a&gt;. The demo site is created using Flask and skeleton css.&lt;/p&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/demo_site_170416.png" title="a demo site"&gt;&lt;/p&gt;
&lt;p&gt;TGOD …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;TGOD is a python package that can download some Taiwan open data. Here I am playing with the Taipei bus api and youbike api. The result is as the link show: 
&lt;a href="http:140.112.64.67:2170"&gt;a demo site of the usage of TGOD&lt;/a&gt;. The demo site is created using Flask and skeleton css.&lt;/p&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/demo_site_170416.png" title="a demo site"&gt;&lt;/p&gt;
&lt;p&gt;TGOD: packed a python package that is for downloading the real-time Taiwan open data, and static map layers in pbf format. 
check this: &lt;a href="https://wcchin.github.io/tgod/"&gt;Taiwan Geographic Open Data&lt;/a&gt;&lt;/p&gt;</content><category term="open data"></category><category term="demo"></category><category term="youbike"></category><category term="bus"></category></entry><entry><title>Current works, and changed website</title><link href="https://wcchin.github.io/current-works-and-changed-website.html" rel="alternate"></link><published>2017-04-15T00:00:00+08:00</published><updated>2017-04-15T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-04-15:/current-works-and-changed-website.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;It has been a long time since my last post. &lt;/p&gt;
&lt;p&gt;First thing is about this personal blog. It have been migrated from mynt to pelican, a well-known, well-developed, and well-maintained static-site-generator in python. 
One good thing from a well-XX generator is that they have a lot of fully functional and …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;It has been a long time since my last post. &lt;/p&gt;
&lt;p&gt;First thing is about this personal blog. It have been migrated from mynt to pelican, a well-known, well-developed, and well-maintained static-site-generator in python. 
One good thing from a well-XX generator is that they have a lot of fully functional and professional looking templates. The one I have been using with mynt, is a very simple, lightweight, skeleton css. And, it is a skeleton! I don't have time to develop a template for it.&lt;/p&gt;
&lt;p&gt;So, I changed to pelican, and use one of the theme in the pelican-themes repos, which is this. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Another things are the works I have been working on. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;the visualization of the Taipei-MRT hourly origin-destination flows. 
    &lt;iframe src="https://player.vimeo.com/video/210724895" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
    &lt;p&gt;&lt;a href="https://vimeo.com/210724895"&gt;捷運分時起迄流量資料視覺化(階段2)&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the visualization of the dengue fever cases. 
    &lt;iframe src="https://player.vimeo.com/video/210724814" width="640" height="320" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
    &lt;p&gt;&lt;a href="https://vimeo.com/210724814"&gt;anim2_3p_2015be&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;packed a python package that is for downloading the real-time Taiwan open data, and static map layers in pbf format. Link: &lt;a href="https://wcchin.github.io/tgod/"&gt;Taiwan Geographic Open Data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;writing another paper, that took me a lot of times; and also preparing for my Ph.D proposal. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="MRT"></category><category term="open data"></category><category term="visualization"></category><category term="writings"></category></entry><entry><title>Taiwan Geographic Open Data package</title><link href="https://wcchin.github.io/taiwan-geographic-open-data-package.html" rel="alternate"></link><published>2017-04-14T22:21:00+08:00</published><updated>2017-04-14T22:21:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-04-14:/taiwan-geographic-open-data-package.html</id><summary type="html">&lt;p&gt;I have been working on this project since last few weeks.&lt;br&gt;
The link is as follow: &lt;a href="https://wcchin.github.io/tgod/"&gt;TGOD github page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is a python package that automatic convert some Taiwan Open Data api to dataframe.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been working on this project since last few weeks.&lt;br&gt;
The link is as follow: &lt;a href="https://wcchin.github.io/tgod/"&gt;TGOD github page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is a python package that automatic convert some Taiwan Open Data api to dataframe.&lt;/p&gt;</content></entry><entry><title>Flow-based PageRank</title><link href="https://wcchin.github.io/flow-based-pagerank.html" rel="alternate"></link><published>2017-02-20T00:00:00+08:00</published><updated>2017-02-20T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-02-20:/flow-based-pagerank.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;FBPR&lt;/p&gt;
&lt;h3&gt;published article and applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://wcchin.github.io/publications/PHYSA_166902/" target="blank"&gt;Wen, T. H., Chin, W. C. B., Lai, P. C. (2017). Understanding the topological characteristics and flow complexity of urban traffic congestion. Physica A: Statistical Mechanics and its Applications 473: 166-177. DOI http://dx.doi.org/10.1016/j.physa.2017.01.035&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;book chapter …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;FBPR&lt;/p&gt;
&lt;h3&gt;published article and applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://wcchin.github.io/publications/PHYSA_166902/" target="blank"&gt;Wen, T. H., Chin, W. C. B., Lai, P. C. (2017). Understanding the topological characteristics and flow complexity of urban traffic congestion. Physica A: Statistical Mechanics and its Applications 473: 166-177. DOI http://dx.doi.org/10.1016/j.physa.2017.01.035&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;book chapter
&lt;a href="http://wcchin.github.io/publications/BookChap_ComplexSocietalSystem/" target="blank"&gt;Wen, T. H., Chin, W. C. B. &amp;amp; Lai, P. C. (2017). Link structure analysis of urban street networks for delineating traffic impact areas. In M. Nemiche, M. Essaaidi (eds.), Advances in Complex Societal, Environmental and Engineered Systems, Nonlinear Systems and Complexity 18. Part 2: 203-220. DOI 10.1007/978-3-319-46164-9_10, ISBN 978-3-319-46164-9.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Install it&lt;/h2&gt;
&lt;p&gt;after download and unzip the repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;the_directory&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Using it&lt;/h2&gt;
&lt;p&gt;using this package&lt;/p&gt;
&lt;p&gt;import it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;fbpr&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FBPR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;setup the file and file setup&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;intersf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;inter_TP_1m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;flowsf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;flow_TP_1m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;inters_fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;node1&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;n1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;node2&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;n2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;flows_fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;initializing the FBPR&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fbpr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FBPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intersf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flowsf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inters_fs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;inters_fs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flows_fs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;flows_fs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;initialize the solutions sets, run once&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_solutions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pool_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;set_count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;run all sets&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_generation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_PRiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;run_pool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;run one set (e.g. first set)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;run_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_generation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_PRiter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;run_pool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_optimal_sol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt;

&lt;span class="n"&gt;optimal_sol_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_optimal_sol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;check the performance of each set&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ga_performance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_no&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ga_performance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_no&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fbpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ga_performance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_no&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="spatial"></category><category term="network"></category><category term="PR"></category><category term="FBPR"></category></entry><entry><title>Geographical PageRank Algorithms</title><link href="https://wcchin.github.io/geographical-pagerank-algorithms.html" rel="alternate"></link><published>2017-02-18T00:00:00+08:00</published><updated>2017-02-18T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-02-18:/geographical-pagerank-algorithms.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;GPRas&lt;/p&gt;
&lt;h3&gt;published article and applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0139509" target="blank"&gt;Chin, W. C. B., &amp;amp; Wen, T. H. (2015). Geographically Modified PageRank Algorithms: Identifying the Spatial Concentration of Human Movement in a Geospatial Network. PLoS ONE 10(10): e0139509. DOI:10.1371/journal.pone.0139509.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Intro.&lt;/h2&gt;
&lt;p&gt;The algorithm can be used to calculate these from a …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;GPRas&lt;/p&gt;
&lt;h3&gt;published article and applications&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0139509" target="blank"&gt;Chin, W. C. B., &amp;amp; Wen, T. H. (2015). Geographically Modified PageRank Algorithms: Identifying the Spatial Concentration of Human Movement in a Geospatial Network. PLoS ONE 10(10): e0139509. DOI:10.1371/journal.pone.0139509.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Intro.&lt;/h2&gt;
&lt;p&gt;The algorithm can be used to calculate these from a spatial network, i.e. network with x, y coordinates that can be used to calculate distance (i.e. projected accordingly from longitude and latitude):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PR&lt;/li&gt;
&lt;li&gt;WPR&lt;/li&gt;
&lt;li&gt;DDPR (proposed in the PloSOne article above)&lt;/li&gt;
&lt;li&gt;GPR (proposed in the PloSOne article above)&lt;/li&gt;
&lt;li&gt;eDDPR (proposed in the PloSOne article above)&lt;/li&gt;
&lt;li&gt;eGPR (proposed in the PloSOne article above)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;==============================&lt;/p&gt;
&lt;h2&gt;dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;li&gt;geopandas&lt;/li&gt;
&lt;li&gt;shapely&lt;/li&gt;
&lt;li&gt;networkx&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;==============================&lt;/p&gt;
&lt;h2&gt;installing GPRas&lt;/h2&gt;
&lt;p&gt;on windows:&lt;/p&gt;
&lt;p&gt;install shapely first. can use conda if you are using anaconda(miniconda).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;scitools&lt;/span&gt; &lt;span class="n"&gt;shapely&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.5.13&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Geopandas is needed to be installed before installing this, which could be hard to install.
First download these from here: http://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GDAL&lt;/li&gt;
&lt;li&gt;pyproj&lt;/li&gt;
&lt;li&gt;Fiona&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, install them with pip install&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;GDAL&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;whl&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pyproj&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;whl&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Fiona&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;whl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, install GPRas&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;==============================&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;import the module&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;gpr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;data input and create the spatial graph concentration object&lt;/h3&gt;
&lt;p&gt;Two ways of data input: csv file, nx.Graph object&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;for csv file&lt;/strong&gt;:
prepare the file paths and file setup info&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;nodefile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;TP_nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;linkfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;TP_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;node_filesetup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;node_id&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;nid&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;link_filesetup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ori&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ori&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;create the spatial_graph object&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gpr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;set the dataset from csv files&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodefile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linkfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_filesetup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;link_filesetup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;for nx.Graph object&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;networkx&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;just&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;reading&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;creating&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;
&lt;span class="n"&gt;ndf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodefile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;nii&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ndf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node_filesetup&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;node_id&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;nxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ndf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node_filesetup&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;nyy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ndf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node_filesetup&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;nodes_lis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ii&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;yyy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ii&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;yy&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nii&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nxx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nyy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;edf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;linkfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;eoo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;edf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;link_filesetup&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ori&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;edd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;edf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;link_filesetup&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;des&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;edges_lis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;oo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dd&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eoo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;edd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_nodes_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes_lis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_edges_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edges_lis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cp"&gt;## graph setup info&lt;/span&gt;
&lt;span class="n"&gt;node_setup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;yyy&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;link_setup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;

&lt;span class="n"&gt;sg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sgc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_nx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;link_setup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;prepare and calculate&lt;/h3&gt;
&lt;p&gt;First, initialize the parameters&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iteration&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Calculate all of them (6 PRs) using the above parameter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalculateAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Calculate each of them using updated parameters&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PR&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DDPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;beta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eDDPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eGPR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;these calculation will change the parameters for summary output, but not the default paramters (for calculation with no paramter setup, eg. alpha=None), which are set from the initialization.&lt;/p&gt;
&lt;h3&gt;get the results in Pandas DataFrame format&lt;/h3&gt;
&lt;p&gt;get summary df&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;summary_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_summary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;summary_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;get the nodes concentration results&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;result_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_results&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;result_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;part_result_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;wpr&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;PR&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;WPR&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;part_result_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;export results&lt;/h3&gt;
&lt;p&gt;the results can be export directly to csv format and shapfile format&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;summary table&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output_summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;to csv file&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp_output_dd_g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ddpr&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;gpr&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="cp"&gt;# also same as to_csv() with items=None&lt;/span&gt;
&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;All_to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp_output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;to shp file&lt;/strong&gt;
prepare a crs string, or it will be default to None&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;crs67&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;proj&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tmerc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;lat_0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;lon_0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.9999&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x_0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;250000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y_0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;ellps&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;aust_SA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;towgs84&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;752&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;358&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.0000011698&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0000018398&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.0000009822&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.00002329&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;units&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;no_defs&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;export the files, which include a point shpfile for nodes and the concentration results, and a line shpfile for edge (no result inside, just for mapping)&lt;/p&gt;
&lt;p&gt;output two of the results (PR and WPR) into one file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_shps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp_shp_pr_wpr&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;crs67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;wpr&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;output all 6 PRs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;All_to_shps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp_shp&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;crs67&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;to networkx graph object&lt;/h3&gt;
&lt;p&gt;similar to the previous export&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_nx&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;PRs&lt;/span&gt;

&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_nx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DDPR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;demo for drawing the networkx object&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;

&lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes_iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;DDPR_score&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;5000.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw_networkx_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw_networkx_edges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_aspect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;equal&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;==============================&lt;/p&gt;
&lt;h2&gt;file structure&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Geographical&lt;/span&gt; &lt;span class="n"&gt;PageRank&lt;/span&gt; &lt;span class="n"&gt;Algorithms&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;bdist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRa&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPR_algorithms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;input_func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;input_funcs&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;DataImport_nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;FileReading_csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;output_func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;output_funcs&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;to_nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;to_shps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt;         &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.1.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.1.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;none&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;whl&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.1.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;example_nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;demo&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;KH_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;KH_nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;TC_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;TC_nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;TP_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;TP_nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRa&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPR_algorithms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;input_func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;input_funcs&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;DataImport_nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;FileReading_csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;output_func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;output_funcs&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;to_nx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;│  &lt;/span&gt;     &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;to_shps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;GPRas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;dependency_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;PKG&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;SOURCES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;│  &lt;/span&gt; &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;LICENSE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;MANIFEST&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="spatial"></category><category term="network"></category><category term="PR"></category><category term="GPR"></category></entry><entry><title>Understanding the topological characteristics and flow complexity of urban traffic congestion</title><link href="https://wcchin.github.io/understanding-the-topological-characteristics-and-flow-complexity-of-urban-traffic-congestion.html" rel="alternate"></link><published>2017-01-06T00:00:00+08:00</published><updated>2017-01-06T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2017-01-06:/understanding-the-topological-characteristics-and-flow-complexity-of-urban-traffic-congestion.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, Lai, P. C. (2017). Understanding the topological characteristics and flow complexity of urban traffic congestion. Physica A: Statistical Mechanics and its Applications 473: 166-177. DOI http://dx.doi.org/10.1016/j.physa.2017.01.035&lt;/p&gt;
&lt;h5&gt;Highlights&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;We proposed a flow-based ranking algorithm …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, Lai, P. C. (2017). Understanding the topological characteristics and flow complexity of urban traffic congestion. Physica A: Statistical Mechanics and its Applications 473: 166-177. DOI http://dx.doi.org/10.1016/j.physa.2017.01.035&lt;/p&gt;
&lt;h5&gt;Highlights&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;We proposed a flow-based ranking algorithm for investigating traffic demands and flow complexity of the street network to identify congested segments.&lt;/li&gt;
&lt;li&gt;Traffic demands capture the concentration of human movements, and it can be determined by the flow-based ranking scores.&lt;/li&gt;
&lt;li&gt;Flow complexity, which can be determined by outgoing entropy, captures the complexity of street network topology and turning traffic simultaneously&lt;/li&gt;
&lt;li&gt;The results showed the segments identified as congested segments in this study are significantly close to the potential congestion zones.&lt;/li&gt;
&lt;li&gt;This study provides network topological insight to identify street-scale urban mobilities, which could be used for sustainable urban environments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;For a growing number of developing cities, the capacities of streets cannot meet the rapidly growing demand of cars, causing traffic congestion. Understanding the spatial–temporal process of traffic flow and detecting traffic congestion are important issues associated with developing sustainable urban policies to resolve congestion. Therefore, the objective of this study is to propose a flow-based ranking algorithm for investigating traffic demands in terms of the attractiveness of street segments and flow complexity of the street network based on turning probability. Our results show that, by analyzing the topological characteristics of streets and volume data for a small fraction of street segments in Taipei City, the most congested segments of the city were identified successfully. The identified congested segments are significantly close to the potential congestion zones, including the officially announced most congested streets, the segments with slow moving speeds at rush hours, and the areas near significant landmarks. The identified congested segments also captured congestion-prone areas concentrated in the business districts and industrial areas of the city. Identifying the topological characteristics and flow complexity of traffic congestion provides network topological insights for sustainable urban planning, and these characteristics can be used to further understand congestion propagation.&lt;/p&gt;
&lt;h5&gt;Keywords&lt;/h5&gt;
&lt;p&gt;Traffic congestion; PageRank algorithm; Network topology; Mobility&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sciencedirect.com/science/article/pii/S037843711730033X" target="_blank"&gt;Link to abstract/full article page&lt;/a&gt;&lt;/p&gt;</content><category term="PageRank"></category><category term="network analysis"></category><category term="transportation"></category></entry><entry><title>Working on Taipei City Open data -- Vehicle Detector (VD)</title><link href="https://wcchin.github.io/working-on-taipei-city-open-data-vehicle-detector-vd.html" rel="alternate"></link><published>2016-12-30T00:00:00+08:00</published><updated>2016-12-30T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-12-30:/working-on-taipei-city-open-data-vehicle-detector-vd.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;using python and matplotlib, matplotlib animation function.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/197269715" width="640" height="640" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/197269715"&gt;Taipei City Vehicle Detector (total volume) data in June 2016&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;using python and matplotlib, matplotlib animation function.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/197269715" width="640" height="640" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/197269715"&gt;Taipei City Vehicle Detector (total volume) data in June 2016&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</content><category term="VD"></category><category term="open data"></category><category term="visualization"></category></entry><entry><title>Link structure analysis of urban street networks for delineating traffic impact areas</title><link href="https://wcchin.github.io/link-structure-analysis-of-urban-street-networks-for-delineating-traffic-impact-areas.html" rel="alternate"></link><published>2016-12-27T00:00:00+08:00</published><updated>2016-12-27T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-12-27:/link-structure-analysis-of-urban-street-networks-for-delineating-traffic-impact-areas.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; &amp;amp; Lai, P. C. (2017). Link structure analysis of urban street networks for delineating traffic impact areas. In &lt;em&gt;M. Nemiche, M. Essaaidi (eds.), Advances in Complex Societal, Environmental
and Engineered Systems, Nonlinear Systems and Complexity 18&lt;/em&gt;. Part 2: 203-220. DOI 10.1007/978-3-319-46164-9_10, ISBN …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; &amp;amp; Lai, P. C. (2017). Link structure analysis of urban street networks for delineating traffic impact areas. In &lt;em&gt;M. Nemiche, M. Essaaidi (eds.), Advances in Complex Societal, Environmental
and Engineered Systems, Nonlinear Systems and Complexity 18&lt;/em&gt;. Part 2: 203-220. DOI 10.1007/978-3-319-46164-9_10, ISBN 978-3-319-46164-9. &lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;With the growing number of developing large-scale cities, traffic congestion has becomes a global issue. Traffic congestion could be attributed to topological structure of street network and traffic flow concentration. It is necessary to investigate these two factors simultaneously to solve traffic congestion. Therefore, this study proposed an innovative analytical procedure of ranking algorithm, the Flow-based PageRank (FBPR), for investigating the traffic flow concentration, complexity of street network structure and traffic impact areas. By overlapping these factors, street segments prone to traffic congestion are identified. A network modularity algorithm is used for delineating the traffic impact areas that will be affected by traffic congestion. Our results indicate that only relying on the topological structure of the street network, this framework could identify the Central Business Districts (CBD), and the areas proximate to the stations of the combination of MRT and train railway systems are prone to traffic congestion. Meanwhile, the delineation of traffic impact areas could be spatially targeted at priorities of traffic improvement for city planners.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.springer.com/us/book/9783319461632" target="_blank"&gt;Link to book page (Springer)&lt;/a&gt;&lt;/p&gt;</content><category term="PageRank"></category><category term="network analysis"></category><category term="transportation"></category></entry><entry><title>Profiling topological characteristics of street network to identify urban traffic congestion</title><link href="https://wcchin.github.io/profiling-topological-characteristics-of-street-network-to-identify-urban-traffic-congestion.html" rel="alternate"></link><published>2016-12-01T00:00:00+08:00</published><updated>2016-12-01T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-12-01:/profiling-topological-characteristics-of-street-network-to-identify-urban-traffic-congestion.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Profiling topological characteristics of street network to identify urban traffic congestion&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: GSDI&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Date: Dec 01, 1330-1500&lt;/li&gt;
&lt;li&gt;Location: Nangang, Taipei, Taiwan&lt;/li&gt;
&lt;li&gt;Room: 504b&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;li&gt;Theme: Smart Transportation/智慧運輸 &lt;/li&gt;
&lt;li&gt;Topic: SDI for the Smart Homeland/智慧國土與空間資訊基礎建設&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;With a growing number of developing …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Profiling topological characteristics of street network to identify urban traffic congestion&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: GSDI&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Date: Dec 01, 1330-1500&lt;/li&gt;
&lt;li&gt;Location: Nangang, Taipei, Taiwan&lt;/li&gt;
&lt;li&gt;Room: 504b&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;li&gt;Theme: Smart Transportation/智慧運輸 &lt;/li&gt;
&lt;li&gt;Topic: SDI for the Smart Homeland/智慧國土與空間資訊基礎建設&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;With a growing number of developing cities, the capacities of roads cannot meet the rapidly growing demands of cars, causing congestion. Understanding the spatial-temporal process of traffic flow and detecting traffic congestion are important issues associated with developing urban policies to resolve congestion. The topological structure of a street network influences the turning probabilities between streets and the moving speeds of automobiles on those streets. Moreover, the connectivity of road segments reflects the degree of the road system facilitating people to their destination. Therefore, the objective of this study is to propose an innovative analytical procedure for investigating the traffic demands in terms of the traffic flow concentration and complexity of the road network based on turning probability. First, we proposed a flow-based ranking algorithm (Flow-based PageRank, FBPR) to determine the traffic flow concentration. Second, we analyzed the real volumes of vehicle movements to calibrate the turning probability. Finally, we measured the topological complexity in terms of outgoing entropy. Congested segments are defined as the street segments that are prone to traffic congestion. By overlapping the traffic demand in terms of FBPR scores and the topological complexity of street segments, congested segments can be identified. The results show that by relying on the topological characteristics of streets, most congested segments identified in the study successfully included the streets identified as the ten most congested streets or segments with slow moving speeds based on vehicle detector (VD) monitoring. The congested segments might also be sources of traffic congestion. Traffic demands can be determined by FBPR scores, which capture human movements, and street complexity can be measured by the outgoing entropy, which represents the topological complexity in terms of turning probability. We also examined the association of urban land use types with traffic demand and street complexity. Identifying the topological characteristics of traffic congestion provides comprehensive insights for city planners, and these characteristics can be used to further understand congestion spreading.&lt;/p&gt;
&lt;h4&gt;Link&lt;/h4&gt;
&lt;p&gt;http://gsdi15.org.tw/
http://gsdi15.org.tw/Content/pdf/SessionsOfPresentation_論文發表議程.pdf&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://bit.ly/gsdi2016chin&lt;br&gt;
https://wcchin.github.io/ipyslides/gsdi2016/GSDI_2016_Wenlab.slides.html&lt;/p&gt;
&lt;iframe width="800" height="600" src="https://wcchin.github.io/ipyslides/gsdi2016/GSDI_2016_Wenlab.slides.html" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="open data"></category><category term="urban traffic"></category><category term="web-framework"></category><category term="processing"></category></entry><entry><title>從路段的連接性與流率分析城市內街道的流量以探討城市交通擁塞問題</title><link href="https://wcchin.github.io/cong-lu-duan-de-lian-jie-xing-yu-liu-lu-fen-xi-cheng-shi-nei-jie-dao-de-liu-liang-yi-tan-tao-cheng-shi-jiao-tong-yong-sai-wen-ti.html" rel="alternate"></link><published>2016-10-16T00:00:00+08:00</published><updated>2016-10-16T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-10-16:/cong-lu-duan-de-lian-jie-xing-yu-liu-lu-fen-xi-cheng-shi-nei-jie-dao-de-liu-liang-yi-tan-tao-cheng-shi-jiao-tong-yong-sai-wen-ti.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Understanding urban traffic congestion by analyzing the link structure and the vehicle flows of urban street network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 發展研究年會&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Location: 國立台灣大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;摘要:&lt;/h4&gt;
&lt;p&gt;城市的交通擁塞，是全球各大城市每天都會面臨的一個問題。車輛的每一趟移動被稱爲旅次，而旅次的發生在於人需要從一個地方前往到另一個地方。在一趟的旅次中，車子的路徑會經過不少的路段。而這些路段之間，因爲相互交錯而提供移動的連接性。路網的設計，除了寬度、最高與最低速限，車道數等物理結構方面的特性之外，還有一個關鍵是其拓撲架構—連接性。連接性高的路段，表示透過這個路段可以很快的到達更多的目的地，故也會有較多的車輛會選擇經過這個路段 …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Understanding urban traffic congestion by analyzing the link structure and the vehicle flows of urban street network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 發展研究年會&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Location: 國立台灣大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;摘要:&lt;/h4&gt;
&lt;p&gt;城市的交通擁塞，是全球各大城市每天都會面臨的一個問題。車輛的每一趟移動被稱爲旅次，而旅次的發生在於人需要從一個地方前往到另一個地方。在一趟的旅次中，車子的路徑會經過不少的路段。而這些路段之間，因爲相互交錯而提供移動的連接性。路網的設計，除了寬度、最高與最低速限，車道數等物理結構方面的特性之外，還有一個關鍵是其拓撲架構—連接性。連接性高的路段，表示透過這個路段可以很快的到達更多的目的地，故也會有較多的車輛會選擇經過這個路段。路網的拓撲結構反映的是各個路段的供給面上，其能夠提供車輛移動的效率。而交通擁塞問題的另一關鍵，是旅次需求的分佈，亦即車輛在各個路段上移動的流率。流率越高，則路段的使用率高，當這些路段附近發生擁塞狀況時，這些地方將也很快的被影響。故，本研究將試着分析路段的連接性與流率等特性，討論擁塞的空間分佈。本研究透過應用部分路段的流量資訊，調校並應用 PageRank (PR) 演算法，分析路段與路口所組成的路網結構。並且，透過調校所取得的吸引程度資訊，討論路段的車輛轉向複雜度，以及計算最終的PR分數，推估每一條路段的潛在交通需求比例分佈。最後，透過套疊高轉向複雜度與高交通需求比例的路段，找出容易形成擁塞的路段。這些同時具備高轉向率與高交通需求比例的路段，主要分佈在官方公佈的十大擁塞路段以及透過街道車輛偵測器所找出的平均移動速度較低的路段的附近，說明轉向複雜度與交通需求比例是造成擁塞的潛在因子。&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://bit.ly/acds2016chin&lt;br&gt;
https://wcchin.github.io/ipyslides/acds2016/network-congestion-06-acds.slides.html&lt;/p&gt;
&lt;iframe width="800" height="600" src="https://wcchin.github.io/ipyslides/acds2016/network-congestion-06-acds.slides.html" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="network"></category><category term="pagerank"></category><category term="flow"></category></entry><entry><title>Exporting jupyter slides to html/pdf</title><link href="https://wcchin.github.io/exporting-jupyter-slides-to-htmlpdf.html" rel="alternate"></link><published>2016-10-07T00:00:00+08:00</published><updated>2016-10-07T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-10-07:/exporting-jupyter-slides-to-htmlpdf.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;Exporting jupyter slides to html / pdf&lt;/h2&gt;
&lt;p&gt;This snippet is a file that use nbconvert and decktape to convert the revealjs html or jupyter slides into html/pdf.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;run this code to convert to pdf from notebook:
python export_reveal.py --notebook jupyter_notebook_file_name.ipynb&lt;/p&gt;
&lt;p&gt;run this code to convert to pdf …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;Exporting jupyter slides to html / pdf&lt;/h2&gt;
&lt;p&gt;This snippet is a file that use nbconvert and decktape to convert the revealjs html or jupyter slides into html/pdf.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;run this code to convert to pdf from notebook:
python export_reveal.py --notebook jupyter_notebook_file_name.ipynb&lt;/p&gt;
&lt;p&gt;run this code to convert to pdf from converted html file:
python export_reveal.py --html reveal_js_file_name.html&lt;/p&gt;
&lt;p&gt;additional options:
-o, --output    specifying an output filename, 
-c              shortcut custimization button for customizing reveal using sky theme and concave transition
--trans         for changing transition method: concave, zoom...
--theme         for changing theme, default to simple.css&lt;/p&gt;
&lt;p&gt;for more detail, please check:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nbconvert - https://github.com/jupyter/nbconvert&lt;/li&gt;
&lt;li&gt;decktape - https://github.com/astefanutti/decktape&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Snippet&lt;/h2&gt;
&lt;p&gt;https://gist.github.com/wcchin/d25dea4c7f68acedb6d923f67bb0549c&lt;/p&gt;
&lt;script src="https://gist.github.com/wcchin/d25dea4c7f68acedb6d923f67bb0549c.js"&gt;&lt;/script&gt;</content><category term="export"></category><category term="jupyter"></category><category term="revealjs"></category></entry><entry><title>Evaluating the role of disease importation in the spatiotemporal transmission of indigenous dengue outbreak</title><link href="https://wcchin.github.io/evaluating-the-role-of-disease-importation-in-the-spatiotemporal-transmission-of-indigenous-dengue-outbreak.html" rel="alternate"></link><published>2016-09-24T00:00:00+08:00</published><updated>2016-09-24T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-09-24:/evaluating-the-role-of-disease-importation-in-the-spatiotemporal-transmission-of-indigenous-dengue-outbreak.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., Tsai, C. T., &amp;amp; &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; (2016). Evaluating the role of disease importation in the spatiotemporal transmission of indigenous dengue outbreak. Applied Geography 76: 137-146. DOI http://dx.doi.org/10.1016/j.apgeog.2016.09.020&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Dengue fever is one of the most widely …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., Tsai, C. T., &amp;amp; &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; (2016). Evaluating the role of disease importation in the spatiotemporal transmission of indigenous dengue outbreak. Applied Geography 76: 137-146. DOI http://dx.doi.org/10.1016/j.apgeog.2016.09.020&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Dengue fever is one of the most widely spread mosquito-borne diseases in the world. International travelers who acquire dengue infection are important routes for virus transmission from one country to another. Previous studies have shown that imported dengue cases are able to initiate indigenous epidemics when appropriate weather conditions are present. However, the spatial-temporal associations between imported dengue cases and indigenous epidemics in areas with different social-demographic conditions remain unclear. This study investigated the determinants of spatial-temporal lags of imported dengue cases that initiated indigenous epidemics from 2003 to 2012 in Taiwan. We constructed Origin-Destination (OD) pairs of transmission from imported townships to local emergence to capture two important epidemiological characteristics: 1) the risk of diffusion and 2) the speed of transmission. We further explored the spatial-temporal associations between disease importation and social-demographic indicators with geographic heterogeneity. Our results indicated that there were significant relationships between the time lags from imported cases to local emergence in late spring and early summer. Moreover, urbanization levels influence the speed of transmission. Our findings also showed that the risk of diffusion weighted by distance-decay characteristics increases the explanatory power of socioeconomic variables in imported townships. These findings imply that disease importation in late spring and early summer may be an early warning indicator of indigenous dengue epidemics and that the risk of transmission may be significantly influenced by the effects of inter-township travel.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sciencedirect.com/science/article/pii/S0143622816304544" target="_blank"&gt;Link to abstract/full article page&lt;/a&gt;&lt;/p&gt;</content><category term="dengue importation"></category><category term="timelag"></category><category term="transmission risk"></category></entry><entry><title>Gephi tutorial site</title><link href="https://wcchin.github.io/gephi-tutorial-site.html" rel="alternate"></link><published>2016-09-24T00:00:00+08:00</published><updated>2016-09-24T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-09-24:/gephi-tutorial-site.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;Announcement: Gephi tutorial site in chinese is built&lt;/h2&gt;
&lt;p&gt;So, the site is built for a lab event in a workshop in 9/22. The reason I built this is because I think these basic guide might be needed in the begining of using this tool.&lt;/p&gt;
&lt;p&gt;The website is served using …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;Announcement: Gephi tutorial site in chinese is built&lt;/h2&gt;
&lt;p&gt;So, the site is built for a lab event in a workshop in 9/22. The reason I built this is because I think these basic guide might be needed in the begining of using this tool.&lt;/p&gt;
&lt;p&gt;The website is served using the lab server:
&lt;a href="http://wenlab.geog.ntu.edu.tw/gephi_tutorial/" target="_blank"&gt; Gephi tutorial site &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In addition, a webpage is built with the gephi plugin -- Sigmajs Exporter -- &lt;a href="http://wenlab.geog.ntu.edu.tw/gephi_sigma/network/#"&gt; global migration network &lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The website is built with a static-site generator, called &lt;a href="http://www.mkdocs.org/" target="_blank"&gt;Mkdocs&lt;/a&gt;, and they have the readthedocs template built-in. &lt;/p&gt;</content><category term="documentation"></category><category term="gephi"></category></entry><entry><title>Space-time process of dengue transmission (part 2) -- the ANIMATED Progression Graph</title><link href="https://wcchin.github.io/space-time-process-of-dengue-transmission-part-2-the-animated-progression-graph.html" rel="alternate"></link><published>2016-08-04T00:00:00+08:00</published><updated>2016-08-04T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-08-04:/space-time-process-of-dengue-transmission-part-2-the-animated-progression-graph.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;Upgrading the visualization of the result&lt;/h2&gt;
&lt;p&gt;In this animation version of the calculation result, I use standard ellipse for visualizing the subclusters, and use different colours for different type of subclusters, which included the chained subclusters (in red), the solo subclusters (in yellow), and the noise (non-clustering cases, in grey …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;Upgrading the visualization of the result&lt;/h2&gt;
&lt;p&gt;In this animation version of the calculation result, I use standard ellipse for visualizing the subclusters, and use different colours for different type of subclusters, which included the chained subclusters (in red), the solo subclusters (in yellow), and the noise (non-clustering cases, in grey). &lt;/p&gt;
&lt;p&gt;And, the result use the svg morphing animation for viewing the development process of the subclusters. The original intention is also to include the merging, splitting behaviors of the chained subclusters, but the svg morphing animation has a rule that the shape must have exactly same coordinates structure, which means the number of vertexes, and the M/L/Z (move to/line to/close line). Merging and splitting must change the M/L/Z structure, e.g. splitting has one shape at first, that has 1M and 1Z, after splitting will have 2M 2Z and -1L. 
So the plan has been changed. I only use different colors to separate the chained and solo clusters. The chained cluster will have several subclusters appeared at the same time.&lt;/p&gt;
&lt;p&gt;To further upgrading the visualization, I have two more ideas:&lt;br&gt;
1. use the convex hull of each subcluster to show the location of the subcluster by time, and change the color to scale color for showing the density, because using convex hull might leads to a visualization confusing and misunderstanding(big shape with same color, means more serious, but the density might be lower). So, changing solid color to scale color or scale opacity must be done if this option is chosen.
2. use standard ellipse instead of circle, for better capturing the location of subclusters. &lt;/p&gt;
&lt;p&gt;The convex hull option has two challenges, first is to identify the convex hull, this part should be easy in python, because scipy has a function for this job; second is to change the colors to scale color or opaction, this part is relatively harder, because the scaling means I have to identify the max and min density, which has no standard level (e.g. how many cases per square meter can be consider the max density?). &lt;/p&gt;
&lt;p&gt;The standard ellipse option also has two challenges, first is to draw the ellipse, which problem related to the calculation of standard ellipse; second is to draw the circle (for subclusters at their begining that might have only one case, which means cannot calculate the standard distance, then I use the circle to show them) in the same scale. &lt;/p&gt;
&lt;p&gt;BTW, a legend is added, and the typo in footer is corrected.&lt;/p&gt;
&lt;h2&gt;The result&lt;/h2&gt;
&lt;p&gt;Open a new windows with this &lt;a href="/svgs/event_4_morph_ellipse.svg"&gt; link &lt;/a&gt; to get a better view. 
&lt;object id="svg1" data="/svgs/event_4_morph_ellipse.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;  &lt;/p&gt;
&lt;h2&gt;reference&lt;/h2&gt;
&lt;p&gt;how to calculate the standard ellipse
&lt;a href="http://resources.esri.com/help/9.3/arcgisdesktop/com/gp_toolref/spatial_statistics_tools/how_directional_distribution_colon_standard_deviational_ellipse_spatial_statistics_works.htm" target="_blank"&gt;How Directional Distribution: Standard Deviational Ellipse (Spatial Statistics) works (by esri) &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;how to draw the ellipse in python using shapely: the accepted answer by HYRY
&lt;a href="http://stackoverflow.com/questions/15445546/finding-intersection-points-of-two-ellipses-python" target="_blank"&gt; Finding intersection points of two ellipses (Python) &lt;/a&gt;&lt;/p&gt;</content><category term="python"></category><category term="svg"></category><category term="dengue"></category></entry><entry><title>Space-time process of dengue transmission -- the Progression Graph</title><link href="https://wcchin.github.io/space-time-process-of-dengue-transmission-the-progression-graph.html" rel="alternate"></link><published>2016-07-29T00:00:00+08:00</published><updated>2016-07-29T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-07-29:/space-time-process-of-dengue-transmission-the-progression-graph.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;Rewrite of codes&lt;/h2&gt;
&lt;p&gt;This is a result from rewriting the codes of the study from a colleague. The concept behind the algorithm is to identify the space-time cluster based on the appearance of the cases. Then, track the temporal chain of the cases.&lt;/p&gt;
&lt;h2&gt;The data&lt;/h2&gt;
&lt;p&gt;Lets take a look on …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;Rewrite of codes&lt;/h2&gt;
&lt;p&gt;This is a result from rewriting the codes of the study from a colleague. The concept behind the algorithm is to identify the space-time cluster based on the appearance of the cases. Then, track the temporal chain of the cases.&lt;/p&gt;
&lt;h2&gt;The data&lt;/h2&gt;
&lt;p&gt;Lets take a look on the data -- the happening of cases, using the animated svg to present:
&lt;object id="svg1" data="/svgs/prog_event_3.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/prog_event_3.svg"&gt; The dengue cases. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;The result&lt;/h2&gt;
&lt;p&gt;After the space-time clustering and progression tracking, this is the result, please wait for a few minutes, because the earlier cases did not form cluster, so it will have nothing to show at the begining:
&lt;object id="svg1" data="/svgs/prog_map_3.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/prog_map_3.svg"&gt; The space-time clusters and progressions. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;</content><category term="python"></category><category term="svg"></category><category term="dengue"></category></entry><entry><title>'Processing' human movements in Taipei City</title><link href="https://wcchin.github.io/processing-human-movements-in-taipei-city.html" rel="alternate"></link><published>2016-07-12T00:00:00+08:00</published><updated>2016-07-12T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-07-12:/processing-human-movements-in-taipei-city.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;working on Taipei City's open data&lt;/h2&gt;
&lt;p&gt;Taipei City's open data contain quite a lots and useful data about &lt;a href="https://taipeicity.github.io/traffic_realtime/"&gt;human movement&lt;/a&gt;, which included vehicle detector for street vehicles number, bus location data, bike sharing service available situation. 
Beside this, we have also obtained the bike sharing rental information, which include the …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;working on Taipei City's open data&lt;/h2&gt;
&lt;p&gt;Taipei City's open data contain quite a lots and useful data about &lt;a href="https://taipeicity.github.io/traffic_realtime/"&gt;human movement&lt;/a&gt;, which included vehicle detector for street vehicles number, bus location data, bike sharing service available situation. 
Beside this, we have also obtained the bike sharing rental information, which include the timestamps and stations of rent/return for each rental event. 
Using these data, I created a animated visualization using the &lt;a href="https://processing.org/"&gt;Processing 3&lt;/a&gt; tool.&lt;/p&gt;
&lt;p&gt;Although there is an alternative to create a web-based processing script using the &lt;a href="http://processingjs.org/"&gt;processing.js&lt;/a&gt; as a convertion tool, the data I included in the animation is too large for webpage and browser loading. 
So, instead of making a web-based viz, I recorded the results as video.&lt;/p&gt;
&lt;p&gt;First, this is a simulation of moving vehicles on the streets network, that they turn randomly at the junctions.
&lt;iframe src="https://player.vimeo.com/video/168713881" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/168713881"&gt;simulation - moving cars on streets taking turn randomly - v0.2&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Using vehicle detector for the calibration in a modified PageRank, the moving process and turning proportion is simulated in this video: &lt;br&gt;
&lt;iframe src="https://player.vimeo.com/video/168714357" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/168714357"&gt;simulation - moving cars on streets turning with the estimated probability - v0.2&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Using the Taipei's Youbike (a Bike Sharing System) Origin-Destination data, the rental events is animated in this video:
&lt;iframe src="https://player.vimeo.com/video/172241655" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/172241655"&gt;Taipei Youbike Origin-Destination rental movement - time data in May 2015&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;The comparison between the results of Taipei City's Youbike with the New York City's Citibike rental events:
&lt;iframe src="https://player.vimeo.com/video/172311955" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/172311955"&gt;bike sharing trips temporal data visualization&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;The latest work is to show the location of buses in Taipei City and the area around:
&lt;iframe src="https://player.vimeo.com/video/174331241" width="640" height="369" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/174331241"&gt;One day of Taipei City&amp;#039;s buses&lt;/a&gt; from &lt;a href="https://vimeo.com/user11082431"&gt;Benny Chin&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;a href="https://drive.google.com/file/d/0B41yDf_RGLPSTFZrLXpmMW02TTA/view?usp=sharing"&gt;go to google drive&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category><category term="processing"></category></entry><entry><title>Visualizing global migration</title><link href="https://wcchin.github.io/visualizing-global-migration.html" rel="alternate"></link><published>2016-07-12T00:00:00+08:00</published><updated>2016-07-12T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-07-12:/visualizing-global-migration.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;The global migration network&lt;/h2&gt;
&lt;p&gt;The migration data is obtained from the World DataBank website "&lt;a href="http://databank.worldbank.org/data/reports.aspx?source=global-bilateral-migration#"&gt;Global Bilateral Migration&lt;/a&gt;".
It is a bilateral matrix, so using each row/column of the matrix as the nodes, and the cells between each pair of row-column as the weight of the edges, this data could …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;The global migration network&lt;/h2&gt;
&lt;p&gt;The migration data is obtained from the World DataBank website "&lt;a href="http://databank.worldbank.org/data/reports.aspx?source=global-bilateral-migration#"&gt;Global Bilateral Migration&lt;/a&gt;".
It is a bilateral matrix, so using each row/column of the matrix as the nodes, and the cells between each pair of row-column as the weight of the edges, this data could be shown as a graph.&lt;/p&gt;
&lt;h2&gt;The locations of nodes&lt;/h2&gt;
&lt;p&gt;Using the countries' name, I used the python geocoder package, with the ArcGIS as provider, for doing the batch geocoding job. Some of them are not geocoded. These countries were geocoded using Google provider plus manually change the country's name according to wikipedia.
"Refugees" rows/columns were ignored, because it is not a country/location.&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;The year 1960, 1970, 1980, 1990, 2000 were included from the data source. So they were mapped separately.&lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/workfile_4_1960.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/workfile_4_1960.svg"&gt; Year 1960. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/workfile_4_1970.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/workfile_4_1970.svg"&gt; Year 1970. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/workfile_4_1980.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/workfile_4_1980.svg"&gt; Year 1980. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/workfile_4_1990.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/workfile_4_1990.svg"&gt; Year 1990. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/workfile_4_2000.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/workfile_4_2000.svg"&gt; Year 2000. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;</content><category term="python"></category><category term="svg"></category></entry><entry><title>the animated svg for viewing Bike Sharing OD relationship</title><link href="https://wcchin.github.io/the-animated-svg-for-viewing-bike-sharing-od-relationship.html" rel="alternate"></link><published>2016-07-09T00:00:00+08:00</published><updated>2016-07-09T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-07-09:/the-animated-svg-for-viewing-bike-sharing-od-relationship.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;animated svg&lt;/h2&gt;
&lt;p&gt;At first, I use processing for showing the spatial-temporal distribution of the bike sharing origin-destination movements.
The animation is recorded as in video: &lt;a href="https://drive.google.com/file/d/0B41yDf_RGLPSTFZrLXpmMW02TTA/view?usp=sharing"&gt;go to google drive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, I remembered that I have seen an animation of moving dot in an image file: &lt;a href="http://kartograph.org/showcase/italia/"&gt;Kartograph - La Bella Italia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;animated svg&lt;/h2&gt;
&lt;p&gt;At first, I use processing for showing the spatial-temporal distribution of the bike sharing origin-destination movements.
The animation is recorded as in video: &lt;a href="https://drive.google.com/file/d/0B41yDf_RGLPSTFZrLXpmMW02TTA/view?usp=sharing"&gt;go to google drive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, I remembered that I have seen an animation of moving dot in an image file: &lt;a href="http://kartograph.org/showcase/italia/"&gt;Kartograph - La Bella Italia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, I search for the simple animation script in svg: &lt;a href="https://mdn.mozillademos.org/files/3261/animateMotion.svg"&gt;simple demo for animation in svg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the result: &lt;/p&gt;
&lt;p&gt;&lt;object id="svg1" data="/svgs/ubike_od_20150101_2.svg" type="image/svg+xml" style="width: 650px; height: 800px"&gt;&lt;/object&gt;&lt;br&gt;
&lt;a href="/svgs/ubike_od_20150101_2.svg"&gt; Year 1960. click this and try to pan or zoom-in with your mouse scroll wheel. &lt;/a&gt;  &lt;/p&gt;</content><category term="python"></category><category term="svg"></category><category term="processing"></category></entry><entry><title>Link structure analysis of urban road networks for identifying traffic impact areas</title><link href="https://wcchin.github.io/link-structure-analysis-of-urban-road-networks-for-identifying-traffic-impact-areas.html" rel="alternate"></link><published>2016-06-02T00:00:00+08:00</published><updated>2016-06-02T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-06-02:/link-structure-analysis-of-urban-road-networks-for-identifying-traffic-impact-areas.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Link structure analysis of urban road networks for identifying traffic impact areas&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: NetSci&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Location: Seoul, South Korea&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen, Pei-Chun Lai&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;With the growing number of large cities, traffic congestion became a global issue. Identifying where it could occur is the …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Link structure analysis of urban road networks for identifying traffic impact areas&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: NetSci&lt;/li&gt;
&lt;li&gt;Year: 2016&lt;/li&gt;
&lt;li&gt;Location: Seoul, South Korea&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen, Pei-Chun Lai&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;With the growing number of large cities, traffic congestion became a global issue. Identifying where it could occur is the first question to resolve congestion. However, predicting the geographic extent of the congestion has seldom been discussed. Traffic impact areas (TIA) refer to areas that will be affected by traffic events. This study will explore more spatial factors that influence the TIA, including traffic flow and link topology of road network. We propose a novel flow-based analytical framework of ranking scheme to quantify interplay between urban road segments and identify the TIA. PageRank (PR) is the ranking algorithm used by Google Search Engine that calculates the scores of importance to rank and identify the significant webpages. PR assumes that people move randomly between webpages. Thus, the weights of all links are equal. However, human movement is not a random event. It is influenced by both network structure and an individual options. This study proposes a revised PR, Flow-based PageRank (FBPR), as the ranking scheme for road network. The weights of link structure in the proposed algorithm emphasize the attraction of road segments’ local properties, and determine the distribution of traffic volume between road segments. Actual traffic volume data is used with a genetic algorithm to fit the FBPR model (figure 1a) for calibrating the attractiveness. The TIA is affected by the extent of interplay, where stronger interplay triggers a larger impact. The interplay is defined as the strength of traffic flow between roads. We establish a community indices to map the interplay. Then, the TIA can be identified (figure 1b). In summary, the FBPR can be used to construct link structure among roads, and the communities identified in the road network represent TIA. It could provide more insights of traffic management for city planners.&lt;/p&gt;
&lt;h4&gt;Link&lt;/h4&gt;
&lt;p&gt;http://netsci2016.net/download/program/19Diffusion_and_Transport.pdf&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://bit.ly/netsci2016benny&lt;br&gt;
https://wcchin.github.io/ipyslides/netsci2016/network-congestion-05.slides.html&lt;/p&gt;
&lt;iframe width="800" height="600" src="https://wcchin.github.io/ipyslides/netsci2016/network-congestion-05.slides.html" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="spatial-temporal"></category><category term="web-framework"></category></entry><entry><title>剖析台灣民眾的就醫流動:利用引力模式評估就醫距離與醫療資源分布的影響</title><link href="https://wcchin.github.io/pou-xi-tai-wan-min-zhong-de-jiu-yi-liu-dong-li-yong-yin-li-mo-shi-ping-gu-jiu-yi-ju-li-yu-yi-liao-zi-yuan-fen-bu-de-ying-xiang.html" rel="alternate"></link><published>2016-04-27T00:00:00+08:00</published><updated>2016-04-27T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-04-27:/pou-xi-tai-wan-min-zhong-de-jiu-yi-liu-dong-li-yong-yin-li-mo-shi-ping-gu-jiu-yi-ju-li-yu-yi-liao-zi-yuan-fen-bu-de-ying-xiang.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;郭年真，林民浩，陳威全，溫在弘 (2016). 剖析台灣民眾的就醫流動:利用引力模式評估就醫距離與醫療資源分布的影響。台灣衛誌 35(2)：136-151。DOI:10.6288/TJPH201635104086。&lt;/p&gt;
&lt;h5&gt;摘要&lt;/h5&gt;
&lt;p&gt;目標:過去研究多以行政區或醫療分區的每萬人口醫療資源數作為評估就醫可近性之指標,但分區的概念簡化民眾就醫行為,與實際醫療利用情形有所落差。本研究將以實際就醫流動資料呈現各地區醫療可近性,並量化就醫距離與醫療資源分布對就醫流動的影響。
方法:使用全民健康保險研究資料庫2010年承保抽樣歸人檔,依居住地與就醫地建立流動起迄矩陣,計算各鄉鎮市區加權就醫距離作為可近性指標,再以引力模式估計影響就醫流動的因素。
結果:加權就醫距離呈現出花東與雲嘉沿海等地有較差的醫療可近性。引力模式分析顯示,就醫距離與醫療資源皆顯著影響民眾的就醫流動。然而,相較於急診與住院的就醫流動,就醫距離對於門診就醫流動影響更為明顯。但於鄰近地區的就醫權衡,醫療機構一般病床數對於急診與住院就醫流動的吸引力,更重於就醫距離的效果。
結論:加權就醫距離更能客觀反映一地醫療可近性。求近是台灣民眾就醫的首要考量,但民眾急診與住院就醫,則傾向在鄰近地區中尋求硬體規模最大者。&lt;/p&gt;
&lt;p&gt;Lin, M. H., Kuo, R. N., &lt;strong&gt;Chin, W …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;郭年真，林民浩，陳威全，溫在弘 (2016). 剖析台灣民眾的就醫流動:利用引力模式評估就醫距離與醫療資源分布的影響。台灣衛誌 35(2)：136-151。DOI:10.6288/TJPH201635104086。&lt;/p&gt;
&lt;h5&gt;摘要&lt;/h5&gt;
&lt;p&gt;目標:過去研究多以行政區或醫療分區的每萬人口醫療資源數作為評估就醫可近性之指標,但分區的概念簡化民眾就醫行為,與實際醫療利用情形有所落差。本研究將以實際就醫流動資料呈現各地區醫療可近性,並量化就醫距離與醫療資源分布對就醫流動的影響。
方法:使用全民健康保險研究資料庫2010年承保抽樣歸人檔,依居住地與就醫地建立流動起迄矩陣,計算各鄉鎮市區加權就醫距離作為可近性指標,再以引力模式估計影響就醫流動的因素。
結果:加權就醫距離呈現出花東與雲嘉沿海等地有較差的醫療可近性。引力模式分析顯示,就醫距離與醫療資源皆顯著影響民眾的就醫流動。然而,相較於急診與住院的就醫流動,就醫距離對於門診就醫流動影響更為明顯。但於鄰近地區的就醫權衡,醫療機構一般病床數對於急診與住院就醫流動的吸引力,更重於就醫距離的效果。
結論:加權就醫距離更能客觀反映一地醫療可近性。求近是台灣民眾就醫的首要考量,但民眾急診與住院就醫,則傾向在鄰近地區中尋求硬體規模最大者。&lt;/p&gt;
&lt;p&gt;Lin, M. H., Kuo, R. N., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, &amp;amp; Wen, T. H. (2015). Profiling the patient flow for seeking healthcare in Taiwan: using gravity modeling to investigate the influences of travel distance and healthcare resources. Taiwan Journal of Public Health 35(2): 136-151. DOI:10.6288/TJPH201635104086.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Objectives: Township-level physician-to-population and hospital bed-to-population ratios have been widely adopted as indicators of health care accessibility in Taiwan; however, these indicators cannot reflect actual healthcare-seeking behaviors of patients. Therefore, the aims of this study were to establish actual patient flow for seeking healthcare and to clarify the factors influencing preferences for seeking healthcare. 
Methods: We estimated the residence and collected the locations of healthcare visits for each patient from the nationwide Longitudinal Health Insurance Database in 2010 to establish an origin-destination matrix. The patient flow among townships could be conducted from the matrix. The weighted travel distance of healthcare visits was developed as a new indicator of accessibility. The gravity model was then used to analyze the patient flow and assess the influences of travel distance and healthcare resources. 
Results: Using the weighted travel distance, eastern Taiwan and the coastal areas of Yunlin and Chiayi were identified as the poorest accessibility for healthcare resources. The results of the gravity model showed that travel distance was the major factor correlated negatively with the volumes of outpatient and inpatient/emergency flow; however, the abundance of healthcare resources positively influenced the preference of inpatient/emergency patients from their residence to neighborhood regions for seeking healthcare. 
Conclusions: The weighted travel distance could properly reflect the access of healthcare. We conclude that travel distance is the major factor which influences patient flow for seeking healthcare. In contrast, people tend to choose the healthcare facilities with abundant resources for seeking inpatient/emergency healthcare.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://publichealth.org.tw/news_detail.asp?CateID=10&amp;CateName=%E5%8F%B0%E7%81%A3%E8%A1%9B%E8%AA%8C&amp;NewsID=392" target="_blank"&gt;Link to abstract page&lt;/a&gt;&lt;/p&gt;</content><category term="gravity"></category><category term="movement"></category><category term="health"></category></entry><entry><title>the nearest neighbours in two dimensions space</title><link href="https://wcchin.github.io/the-nearest-neighbours-in-two-dimensions-space.html" rel="alternate"></link><published>2016-04-22T00:00:00+08:00</published><updated>2016-04-22T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-04-22:/the-nearest-neighbours-in-two-dimensions-space.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;nearest neighbours&lt;/h2&gt;
&lt;p&gt;Which points are the nearest neighbours, or top N nearest neighbours, are the frequently used procedures in point data analysis. 
Sometimes, we might need to find the neighbours in-radius of some distance. &lt;/p&gt;
&lt;p&gt;K-d tree is one of the data structure for searching the points that is closer to …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;nearest neighbours&lt;/h2&gt;
&lt;p&gt;Which points are the nearest neighbours, or top N nearest neighbours, are the frequently used procedures in point data analysis. 
Sometimes, we might need to find the neighbours in-radius of some distance. &lt;/p&gt;
&lt;p&gt;K-d tree is one of the data structure for searching the points that is closer to a target point that is in k-dimensions. 
E.g. for 2-d points, each point has a x coordinate and a y coordinate, it is called 2-d tree. 
In a 2-d tree, starting from the root, is the first dimension (let say x-dimension), then the second level would be for the second dimension (y-dimension).
The idea is to divide the points into two groups in each level, smaller item go to the left, bigger item go to the right...&lt;/p&gt;
&lt;p&gt;So, the kd-tree helps to reduce the k-dimension nearest neighbours problem into a simpler problem (in terms of complexity), by using the divide-and-conquer trick.&lt;/p&gt;
&lt;h2&gt;working in python&lt;/h2&gt;
&lt;p&gt;In this example, base points are the points in the ground, let says, the shops;
source points are the points that is going to search for the nearest destinations (base points), let says, the location of the people. 
The aim is to locate the shops that is nearby to each person. 
So, it would be for each person, search one time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;spatial&lt;/span&gt;

&lt;span class="n"&gt;xlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# x coordinates of base points...&lt;/span&gt;
&lt;span class="n"&gt;ylist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# y coordinates of base points...&lt;/span&gt;

&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# x coordinates for the three people&lt;/span&gt;
&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;9.8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# y coordinates for the three people&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xlist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ylist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spatial&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KDTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;nn_radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c"&gt;# the nearby radius for searching&lt;/span&gt;
&lt;span class="n"&gt;nlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_ball_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;nn_radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c"&gt;# If x is a single point, returns a list of the indices of the neighbors of x. &lt;/span&gt;
&lt;span class="c"&gt;# If x is an array of points, returns an object array of shape tuple containing lists of neighbors.&lt;/span&gt;
&lt;span class="c"&gt;# in this case, it will return an array of list, which represent the index of the nearby neighbours in the data list. &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;besides query_ball_point, there are other methods (from &lt;a href="http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.KDTree.html#scipy.spatial.KDTree"&gt;scipy&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;count_neighbors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c"&gt;#Count how many nearby pairs can be formed.&lt;/span&gt;
&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;distance_upper_bound&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c"&gt;#Query the kd-tree for nearest neighbors&lt;/span&gt;
&lt;span class="n"&gt;query_ball_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eps&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c"&gt;#Find all pairs of points whose distance is at most r&lt;/span&gt;
&lt;span class="n"&gt;query_pairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;eps&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;    &lt;span class="c"&gt;#Find all pairs of points within a distance.&lt;/span&gt;
&lt;span class="n"&gt;sparse_distance_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_distance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;#Compute a sparse distance matrix&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.KDTree.html#scipy.spatial.KDTree"&gt;more details from scipy docs&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category></entry><entry><title>working with heapq in python</title><link href="https://wcchin.github.io/working-with-heapq-in-python.html" rel="alternate"></link><published>2016-04-22T00:00:00+08:00</published><updated>2016-04-22T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-04-22:/working-with-heapq-in-python.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;simple notes on heapq&lt;/h2&gt;
&lt;p&gt;heapq is a data structure to implement (work with) priority queue.&lt;/p&gt;
&lt;p&gt;Let says, there is an array of several numbers. Sometimes, we need to get the top 3 largest number in the array.
One way of getting the max or min result, is to scan all …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;simple notes on heapq&lt;/h2&gt;
&lt;p&gt;heapq is a data structure to implement (work with) priority queue.&lt;/p&gt;
&lt;p&gt;Let says, there is an array of several numbers. Sometimes, we need to get the top 3 largest number in the array.
One way of getting the max or min result, is to scan all of the items (numbers) in the array, which means starting with the first number, then compare it to the second, change the number to the second one if the second is bigger, then continue until the last number. 
Then, do this again with the rest of the numbers to get the second largest, and same procedure again for the third. That means, the complexity would be approximately m x N, that m is the top m largest or smallest, and N is the number of item in the array. &lt;/p&gt;
&lt;p&gt;The other way is perform a sorting procedure to the array, then choose the top 3 number at the front or at the back. This solution's complexity would depend on the sorting algorithm. &lt;/p&gt;
&lt;p&gt;Priority queue (PQ) is like sorting, that do not sort the data in an array. But always pop out the smallest or largest item from the array.&lt;/p&gt;
&lt;p&gt;We can use heapq to implement PQ. heapq construct a heap tree instead of sorting. There are two type of heap tree: min heap and max heap. 
A min heap is a binary tree that the parent is always smaller (or equal) than the children. A max heap is the opposite, that parrent is always larger (or equal) than children. 
So, with a min heap or max heap, it can always pop out the smallest or biggest item (respectively) from the array. &lt;/p&gt;
&lt;h2&gt;heapq in python&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;heapq&lt;/span&gt;
    &lt;span class="n"&gt;alist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c"&gt;#first, create a list that populated with items&lt;/span&gt;

    &lt;span class="n"&gt;heapq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;#heapify the list, that create a heap tree, inplace&lt;/span&gt;
    &lt;span class="n"&gt;aheap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alist&lt;/span&gt;

    &lt;span class="n"&gt;heapsort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# this will create a sorted list of the list&lt;/span&gt;

    &lt;span class="n"&gt;heapq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aheap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# add the item 10 into the heap tree&lt;/span&gt;

    &lt;span class="n"&gt;heapq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heappop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aheap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# pop out and return the smallest item from the heap tree&lt;/span&gt;

    &lt;span class="n"&gt;aheap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c"&gt;# access the smallest number without pop it out&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://docs.python.org/2/library/heapq.html"&gt;more details from python docs&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category></entry><entry><title>Using tiddler - lightbulb page changed</title><link href="https://wcchin.github.io/using-tiddler-lightbulb-page-changed.html" rel="alternate"></link><published>2016-01-30T00:00:00+08:00</published><updated>2016-01-30T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2016-01-30:/using-tiddler-lightbulb-page-changed.html</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;page closed~~~&lt;/h3&gt;
&lt;p&gt;The note page was changed to tiddler wiki based.&lt;/p&gt;
&lt;p&gt;I am using tiddlywiki-desktop now, to write the tiddlers(posts) and journals(logs) with it, directly in the mynt staticsite folders.&lt;/p&gt;
&lt;p&gt;The tiddlywiki is now locate in the asset folders, which can be linked to the note page via …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;page closed~~~&lt;/h3&gt;
&lt;p&gt;The note page was changed to tiddler wiki based.&lt;/p&gt;
&lt;p&gt;I am using tiddlywiki-desktop now, to write the tiddlers(posts) and journals(logs) with it, directly in the mynt staticsite folders.&lt;/p&gt;
&lt;p&gt;The tiddlywiki is now locate in the asset folders, which can be linked to the note page via iframe.&lt;/p&gt;
&lt;p&gt;Plus, the tiddlers can be open in a new tab, to show the tiddler and open the tiddlywiki as an independent (static but flowing/interactive) pages.&lt;/p&gt;
&lt;p&gt;Tiddlywiki, a single-page-application, is a wiki style note-taking system. It is designed to be used as a one-file app, that open in the browser(html+js).
Tiddlers are linked to the related tiddlers, just the same as the "wiki" system. (It is a wiki system)&lt;/p&gt;
&lt;p&gt;I am planning on migrating my tiddlyspace tiddlers into this tiddly, since they seem to be closed in the end of 2016.&lt;/p&gt;</content><category term="webpage"></category></entry><entry><title>Pushing items to gh-pages</title><link href="https://wcchin.github.io/pushing-items-to-gh-pages.html" rel="alternate"></link><published>2015-10-31T00:00:00+08:00</published><updated>2015-10-31T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-10-31:/pushing-items-to-gh-pages.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I am new to the 'git' world (a github noob). I use github as a space to store some things that I want to share with public. This website is stored in the gh-pages master branch. I have another repository that is also used as gh-pages, but not as the …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I am new to the 'git' world (a github noob). I use github as a space to store some things that I want to share with public. This website is stored in the gh-pages master branch. I have another repository that is also used as gh-pages, but not as the master branch. So I am taking this note to remind myself how to sync the branchs.&lt;/p&gt;
&lt;p&gt;The following codes would push things from local to the master branch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the master branch is the gh-pages branch, then this is done.&lt;br&gt;
The following codes would sync the gh-pages branch with the master:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;checkout&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;rebase&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;checkout&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, the gh-pages would be online to the webpage:&lt;br&gt;
https://username.github.io/repositoryname/filename.html&lt;/p&gt;</content><category term="gh-pages"></category><category term="github"></category></entry><entry><title>Using mynt - a static site generator</title><link href="https://wcchin.github.io/using-mynt-a-static-site-generator.html" rel="alternate"></link><published>2015-10-31T00:00:00+08:00</published><updated>2015-10-31T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-10-31:/using-mynt-a-static-site-generator.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;This website is generated by using mynt -- a static site generator writen in python. Mynt will convert markdown text file to html by using the corresponding layout. &lt;a href="http://mynt.uhnomoli.com/"&gt;Mynt's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Mynt is a python2 package, so python2 should be installed in the computer before installing and using mynt. (I am …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;This website is generated by using mynt -- a static site generator writen in python. Mynt will convert markdown text file to html by using the corresponding layout. &lt;a href="http://mynt.uhnomoli.com/"&gt;Mynt's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Mynt is a python2 package, so python2 should be installed in the computer before installing and using mynt. (I am not sure if it works with python3.)&lt;/p&gt;
&lt;p&gt;To install mynt, type this in command line:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;mynt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Initialize a new project/website&lt;/h2&gt;
&lt;p&gt;To start a new website at a local directory &lt;code&gt;~/project&lt;/code&gt; with the name &lt;code&gt;site-name&lt;/code&gt;, in command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="cp"&gt;## or force remove the existing project before create new project&lt;/span&gt;
&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Website directory structure&lt;/h3&gt;
&lt;p&gt;Mynt will create the following directories and files in the &lt;code&gt;site-name&lt;/code&gt; directory after the initialize:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;
&lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;archives&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;_assets&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;pygments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└───&lt;/span&gt;&lt;span class="n"&gt;_sass&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="n"&gt;_base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sass&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sass&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;favicon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;sbg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="err"&gt;└───&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="n"&gt;mynt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="err"&gt;└───&lt;/span&gt;&lt;span class="n"&gt;_src&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;                   &lt;span class="n"&gt;mynt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;_posts&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;It&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;works&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;└───&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;First thing to do, is to modify the &lt;code&gt;config.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;base_url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;according&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Writing blog posts&lt;/h2&gt;
&lt;p&gt;Posts should be place under the &lt;code&gt;_posts&lt;/code&gt; directory. There is a demo file come with the &lt;code&gt;init&lt;/code&gt;. The demo file's name included the date when it is written (2011-12-04), which format should be followed while creating new post file (.md), to tell mynt when the post is written, so mynt would know how to sort the posts. The following part of the filename will be a part of the filename for the generated html files, which means it will appear at the address bar while people are looking at it.&lt;/p&gt;
&lt;p&gt;Create a new file with file name like &lt;code&gt;2015-10-31-some-name.md&lt;/code&gt;. The header and post content of the file should looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;hey&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;
&lt;span class="nl"&gt;layout:&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="nl"&gt;tags:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="cp"&gt;## a sectiontitle&lt;/span&gt;
&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;goes&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="cp"&gt;### a subsection title&lt;/span&gt;
&lt;span class="n"&gt;blah&lt;/span&gt; &lt;span class="n"&gt;blah&lt;/span&gt; &lt;span class="n"&gt;blah&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the header of the .md file:&lt;br&gt;
- The title &lt;code&gt;hey you&lt;/code&gt; will be the title of the post, and also the title that will appear at the index page.
- the layout &lt;code&gt;post.html&lt;/code&gt;, is telling the mynt which layout file in &lt;code&gt;_templates&lt;/code&gt; to use, for rendering this post.
- the tags of the post.&lt;/p&gt;
&lt;p&gt;The following things after the three dashes, are the content part of the post. Use markdown syntax to write the content. And maybe some html tags in the post if needed.&lt;/p&gt;
&lt;h2&gt;Container&lt;/h2&gt;
&lt;p&gt;Sometimes, blog post is not the only type of post we want to write. For example in this website, I separated the posts into 5 types according to the topic (geograph, lightbulb...). This is the function of container. To add a new container (let say &lt;code&gt;funbox&lt;/code&gt;) for the website, the config.yml file should add the following lines at the bottom of the files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;containers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;funbox&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/funbox/&amp;lt;slug&amp;gt;/&lt;/span&gt;
        &lt;span class="n"&gt;tag_layout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;funbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;html&lt;/span&gt;
        &lt;span class="n"&gt;tags_url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/funbox/tag/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;that &lt;code&gt;funbox.tag.html&lt;/code&gt; file should also be added in the &lt;code&gt;_templates&lt;/code&gt; directory. (you could just copy and paste the &lt;code&gt;tag.html&lt;/code&gt; and rename it)
Then, add the following directories (beside &lt;code&gt;_posts&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;_containers&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└───&lt;/span&gt;&lt;span class="n"&gt;funbox&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;           &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a_first_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;├───&lt;/span&gt;&lt;span class="n"&gt;_templates&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;funboxpost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;       &lt;span class="n"&gt;funbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The format of the post .md file is same as the blog post files, which probably will use the &lt;code&gt;funboxpost.html&lt;/code&gt; as the layout file. &lt;/p&gt;
&lt;h2&gt;Layout templating and sytling&lt;/h2&gt;
&lt;p&gt;Mynt use the jinja2 templating engine. So, the layout files should be written or modified according to jinja2 style templating syntax. &lt;/p&gt;
&lt;p&gt;The styles -- the css and js files, should be place in the &lt;code&gt;_assets/css&lt;/code&gt; and &lt;code&gt;_assets/js&lt;/code&gt;. To get them, let say the &lt;code&gt;_assets/css/skeleton.css&lt;/code&gt;, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;get_asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;skeleton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;The template of this website is modified based on the initial template file, with the &lt;a href="http://getskeleton.com/"&gt;skeleton&lt;/a&gt; sample file.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Generating website:&lt;/h2&gt;
&lt;p&gt;To generate the website to a directory &lt;code&gt;~/output/target&lt;/code&gt; (&lt;code&gt;cd&lt;/code&gt; to the &lt;code&gt;project&lt;/code&gt; directory first, then):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;

&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;span class="cp"&gt;## or, if the output/target is already exist, force overwriting it:&lt;/span&gt;
&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The generated html files and folders will appear under the &lt;code&gt;output/target&lt;/code&gt; directory, which can be uploaded to the hosting space like gh-pages.&lt;/p&gt;
&lt;h2&gt;Preview the website/post before publishing&lt;/h2&gt;
&lt;p&gt;Mynt come with a simple function (debug mode) for previewing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;span class="cp"&gt;## or, to change the preview port&lt;/span&gt;
&lt;span class="n"&gt;mynt&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;8001&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, open the web-browser, and go to the site &lt;code&gt;http://localhost:8001&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Then, possibly, you might need to modify the files, and then &lt;code&gt;mynt gen -f xxx yyy&lt;/code&gt;, then &lt;code&gt;mynt serve yyy&lt;/code&gt; again, until the website is ready. &lt;/p&gt;
&lt;h2&gt;Publishing website&lt;/h2&gt;
&lt;p&gt;Upload all of the files in the &lt;code&gt;output/target&lt;/code&gt; directory to the hosting space. If you want to upload to a github-pages, then prepare the gh-pages as the &lt;a href="https://pages.github.com/"&gt;github pages&lt;/a&gt; shows, then push the files to the master/gh-pages branch. There is some notes in &lt;a href="/2015/10/31/sync_ghpages/"&gt;Pushing items to gh-pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tadaa...&lt;/p&gt;</content><category term="webpage"></category></entry><entry><title>Article published</title><link href="https://wcchin.github.io/article-published.html" rel="alternate"></link><published>2015-10-06T00:00:00+08:00</published><updated>2015-10-06T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-10-06:/article-published.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Hooray~ This is an exciting news. &lt;/p&gt;
&lt;p&gt;My first article (me as the first author) has been published yesterday. It is rewritten from my master thesis. 
The idea came to my mind in the begining of the year 2012. Most of the development of the algorithms were done within the semester …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Hooray~ This is an exciting news. &lt;/p&gt;
&lt;p&gt;My first article (me as the first author) has been published yesterday. It is rewritten from my master thesis. 
The idea came to my mind in the begining of the year 2012. Most of the development of the algorithms were done within the semester. 
Then I tried to test the algorithm in more ways, and finally all tryings were not end well. 
In april 2013, the algorithms were first proposed in an international conference in L.A.. Then I graduated in the following June/July. 
After that, the formal research on these algorithms were stop, and some other things keep comming up. 
Some further experiments were done. The codes were rewritten in matlab, then in python. I also made a GUI for the algorithms in Python. 
Although most of the testings did not give good results that worth noting, but, the understanding on the algorithms has became more clear. &lt;/p&gt;
&lt;p&gt;The article was submitted to the PLoSONE in the may 2015. After several times of revising, it was accepted in september after I came back from the FOSS4G conference at Seoul.  &lt;/p&gt;
&lt;p&gt;The article is about developing two algorithms for analyzing geospatial network, to see where people or moving agents would be gathering in the connected geographical space. 
The algorithms were modified from the PageRank algorithm, in the similar way as the Weighted PageRank did. Two key elements were added, the geographical distance between nodes, and the attractiveness of each node. &lt;/p&gt;
&lt;p&gt;Two "experiments" were conducted. One of them is a national-scale, inter-cities network. And the other is a series of city-scale, within-city networks. &lt;/p&gt;
&lt;p&gt;The abstract of the article is shown at &lt;a href="https://wcchin.github.io/findings/plosone_1010/"&gt;Mini-lab/Findings&lt;/a&gt;. 
The article could be accessed from the &lt;a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0139509" target="_blank"&gt;Link to open access&lt;/a&gt;. &lt;/p&gt;</content><category term="publication"></category><category term="article"></category></entry><entry><title>Geographically Modified PageRank Algorithms: Identifying the Spatial Concentration of Human Movement in a Geospatial Network</title><link href="https://wcchin.github.io/geographically-modified-pagerank-algorithms-identifying-the-spatial-concentration-of-human-movement-in-a-geospatial-network.html" rel="alternate"></link><published>2015-10-06T00:00:00+08:00</published><updated>2015-10-06T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-10-06:/geographically-modified-pagerank-algorithms-identifying-the-spatial-concentration-of-human-movement-in-a-geospatial-network.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, &amp;amp; Wen, T. H. (2015). Geographically Modified PageRank Algorithms: Identifying the Spatial Concentration of Human Movement in a Geospatial Network. PLoS ONE 10(10): e0139509. DOI:10.1371/journal.pone.0139509.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;A network approach, which simplifies geographic settings as a form of nodes and links, emphasizes …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, &amp;amp; Wen, T. H. (2015). Geographically Modified PageRank Algorithms: Identifying the Spatial Concentration of Human Movement in a Geospatial Network. PLoS ONE 10(10): e0139509. DOI:10.1371/journal.pone.0139509.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;A network approach, which simplifies geographic settings as a form of nodes and links, emphasizes the connectivity and relationships of spatial features. Topological networks of spatial features are used to explore geographical connectivity and structures. The PageRank algorithm, a network metric, is often used to help identify important locations where people or automobiles concentrate in the geographical literature. However, geographic considerations, including proximity and location attractiveness, are ignored in most network metrics. The objective of the present study is to propose two geographically modified PageRank algorithms—Distance-Decay PageRank (DDPR) and Geographical PageRank (GPR)—that incorporate geographic considerations into PageRank algorithms to identify the spatial concentration of human movement in a geospatial network. Our findings indicate that in both intercity and within-city settings the proposed algorithms more effectively capture the spatial locations where people reside than traditional commonly-used network metrics. In comparing location attractiveness and distance decay, we conclude that the concentration of human movement is largely determined by the distance decay. This implies that geographic proximity remains a key factor in human mobility.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0139509" target="_blank"&gt;Link to open access&lt;/a&gt;&lt;/p&gt;</content><category term="network"></category><category term="movement"></category></entry><entry><title>A Web-based Framework for Monitoring Spatial-temporal Clustering of Epidemics in Taiwan</title><link href="https://wcchin.github.io/a-web-based-framework-for-monitoring-spatial-temporal-clustering-of-epidemics-in-taiwan.html" rel="alternate"></link><published>2015-09-17T00:00:00+08:00</published><updated>2015-09-17T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-09-17:/a-web-based-framework-for-monitoring-spatial-temporal-clustering-of-epidemics-in-taiwan.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;A Web-based Framework for Monitoring Spatial-temporal Clustering of Epidemics in Taiwan&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: FOSS4G&lt;/li&gt;
&lt;li&gt;Year: 2015&lt;/li&gt;
&lt;li&gt;Location: Seoul, South Korea&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen, Fei-Ying Kuo, Hwa-Lung Yu, Ming-Che Hu&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;The aim of the study is to propose a web-based early-warning framework for monitoring spatial-temporal clustering of …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;A Web-based Framework for Monitoring Spatial-temporal Clustering of Epidemics in Taiwan&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: FOSS4G&lt;/li&gt;
&lt;li&gt;Year: 2015&lt;/li&gt;
&lt;li&gt;Location: Seoul, South Korea&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen, Fei-Ying Kuo, Hwa-Lung Yu, Ming-Che Hu&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;The aim of the study is to propose a web-based early-warning framework for monitoring spatial-temporal clustering of epidemics in Taiwan. The framework integrated disease surveillance data from difference sources, including Real-time Outbreak and Disease Surveillance (RODS) database, and LABoratory Surveillance (LABS) databases. RODS database is reported directly from the hospital emergency department (ED), whereas LABS is reported with detail information of the specific pathogen after the laboratory diagnosis procedures from contract hospitals. RODS could provide real-time information of patients’ symptoms but it provides nothing about confirmed disease or pathogens of a patient. LABS, on the other hand, could identify the specific infectious pathogen, which is the cause of disease, but the report time could have time lags due to laboratory diagnosis procedures. By combining open source tools and space-time clustering detections methods, we developed an early-warning framework for depicting space-time dynamics of clusters and identifying possible epidemic outbreaks. The framework is a web-based platform with several modules:1. Data Explore: it includes data management, data processing and space-time data visualization; 2. Space-Time Analyst: it analyzes space-time relationships of cases and depicts space-time dynamics of clusters by developing ST-DBSCAN algorithm, and 3. Early-Warning Alert: it provides real-time alerts when detecting possible disease outbreaks. The platform is established in Python environment. We used several open source components, including web2py as the web-based framework (system core component) and Bokeh for data visualization. The system core component is the control centers for dealing with requests/responses, scheduled analysis procedures and database updates. We also built a Postgresql/PostGIS database to store/manage the geographic information and disease data extracted from RODS and LABS databases. The visualization components used several javascript libraries, including leafletjs, mapbox, and bokehjs. The Space-Time Analyst and Early-Warning Alert modules were developed with open source Python libraries for identifying the space-time process of reported cases, including the dynamics of the core-border-noise changes, the space-time clusters, and the space-time association between RODS-LABS events. Our study built a web-based spatial decision support system with the two disease surveillance databases (RODS and LABS). With the integration of open source packages and libraries, we built the comprehensive prototype for early warning of detecting the disease clusters.&lt;/p&gt;
&lt;h4&gt;Link&lt;/h4&gt;
&lt;p&gt;https://www.meci.co.kr/societyevent/FOSS4G2015/program/program_view.asp?a_type=PT&amp;amp;a_idx=81&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://bit.ly/foss4g2015chin&lt;br&gt;
http://wcchin.github.io/ipyslides/foss4g2015/FOSS4G_seoul2015.slides.html?theme=sky?transition=convex&lt;/p&gt;
&lt;iframe width="800" height="600" src="http://wcchin.github.io/ipyslides/foss4g2015/FOSS4G_seoul2015.slides.html?theme=sky?transition=convex" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="spatial-temporal"></category><category term="web-framework"></category></entry><entry><title>Using plotly</title><link href="https://wcchin.github.io/using-plotly.html" rel="alternate"></link><published>2015-09-07T00:00:00+08:00</published><updated>2015-09-07T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-09-07:/using-plotly.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I made a &lt;a href="https://wcchin.github.io/geograph/dengue_spacetimemap/" target="_blank"&gt;3D scatter plot&lt;/a&gt; with &lt;a href="https://plot.ly" target="_blank"&gt;plotly&lt;/a&gt; yesterday, in ipython notebook (Jupyter).
The data was stored in github, including the processed point data (with centroid coordinate), and the boundary vertex of Taiwan.&lt;/p&gt;
&lt;p&gt;The plot figures is at &lt;a href="https://wcchin.github.io/geograph/dengue_spacetimemap/"&gt;Dengue cases at Taiwan from year 2014 &lt;/a&gt; 
or in &lt;a href="https://plot.ly/~wcchin/67/indigenous-case-imported-case-taiwan-boundary/" target="_blank"&gt;plotly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The code …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I made a &lt;a href="https://wcchin.github.io/geograph/dengue_spacetimemap/" target="_blank"&gt;3D scatter plot&lt;/a&gt; with &lt;a href="https://plot.ly" target="_blank"&gt;plotly&lt;/a&gt; yesterday, in ipython notebook (Jupyter).
The data was stored in github, including the processed point data (with centroid coordinate), and the boundary vertex of Taiwan.&lt;/p&gt;
&lt;p&gt;The plot figures is at &lt;a href="https://wcchin.github.io/geograph/dengue_spacetimemap/"&gt;Dengue cases at Taiwan from year 2014 &lt;/a&gt; 
or in &lt;a href="https://plot.ly/~wcchin/67/indigenous-case-imported-case-taiwan-boundary/" target="_blank"&gt;plotly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The code is as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="nb"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefaultencoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.plotly&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;plotly.graph_objs&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://raw.githubusercontent.com/wcchin/gdata/master/Dengue_ALL_4_1415.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_bound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://raw.githubusercontent.com/wcchin/gdata/master/taiwan_bound_84_vertices2.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;yy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;xx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;zz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vilname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;fullname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;importcheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;importcase&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;datelist_imp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;latlist_imp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;lonlist_imp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;vilname_imp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;datelist_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;latlist_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;lonlist_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;vilname_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;thisyear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;thismonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;thisday&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;thisdate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thisyear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thismonth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thisday&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thisvilname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vilname&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;#print importcheck[i]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;importcheck&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;datelist_imp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thisdate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;latlist_imp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;lonlist_imp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;vilname_imp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thisvilname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;datelist_ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thisdate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;latlist_ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;lonlist_ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;vilname_ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thisvilname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#print len(datelist_ind)&lt;/span&gt;
&lt;span class="c"&gt;#print len(datelist_imp)&lt;/span&gt;

&lt;span class="n"&gt;bound_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bound&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bound_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_bound&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;bound_z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bound_x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;trace1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Scatter3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lonlist_ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;latlist_ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datelist_ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vilname_ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;markers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;indigenous case&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rgb(0, 0, 0)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;trace2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Scatter3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lonlist_imp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;latlist_imp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datelist_imp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vilname_imp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;markers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;imported case&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rgb(255, 65, 54)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;symbol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rgb(255, 65, 54)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tracebound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Scatter3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bound_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bound_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bound_z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lines&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;taiwan boundary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#1f77b4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;symbol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rgb(0,0,0)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;#1f77b4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;trace1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trace2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tracebound&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Margin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;traceorder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;reversed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;yref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;paper&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="n"&gt;scene&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;xaxis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;XAxis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;yaxis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;YAxis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;zaxis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ZAxis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Taiwan dengue cases (indigenous or imported) space-time map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ps: the python environment has to complete the connection api key configuration before using the code above. &lt;/p&gt;</content><category term="ipython"></category><category term="plotly"></category></entry><entry><title>Using nbconvert to convert ipynb to slides in html</title><link href="https://wcchin.github.io/using-nbconvert-to-convert-ipynb-to-slides-in-html.html" rel="alternate"></link><published>2015-08-27T00:00:00+08:00</published><updated>2015-08-27T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-08-27:/using-nbconvert-to-convert-ipynb-to-slides-in-html.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;This is a note on using nbconvert to make slides from ipynb to html, with markdown and codes using jupyter.
jupyter, nbconvert have to be installed in the computer.&lt;/p&gt;
&lt;h2&gt;Prepare the file&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;open a jupyter from terminal:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;miniconda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.9.1&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt; &lt;span class="n"&gt;notebook&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;create a file (.ipynb), maybe …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;This is a note on using nbconvert to make slides from ipynb to html, with markdown and codes using jupyter.
jupyter, nbconvert have to be installed in the computer.&lt;/p&gt;
&lt;h2&gt;Prepare the file&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;open a jupyter from terminal:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="n"&gt;miniconda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.9.1&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt; &lt;span class="n"&gt;notebook&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;create a file (.ipynb), maybe a python2 file or R or something else which code you are going to use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For the text page, change the &lt;code&gt;Code&lt;/code&gt; to &lt;code&gt;Markdown&lt;/code&gt;, choose &lt;code&gt;Slideshow&lt;/code&gt; in Cell Toolbar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select one of the item in the Slide Type in the heading of each cell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type in markdown syntax, use tex syntax to type equation (MathJax is supported).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click save, or wait until autosave.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Convert to slides:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;In terminal, change directory to where the .ipynb is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type this in terminal, suppose the .ipynb file's name is &lt;code&gt;filename&lt;/code&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;jupyter&lt;/span&gt; &lt;span class="n"&gt;nbconvert&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;slides&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ipynb&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;reveal&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://cdn.jsdelivr.net/reveal.js/2.5.0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;jupyter&lt;/span&gt; &lt;span class="n"&gt;nbconvert&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;slides&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ipynb&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;reveal&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://cdn.jsdelivr.net/reveal.js/2.5.0&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;a file name &lt;code&gt;filename.slides.html&lt;/code&gt; will be created, open it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to change the theme from default to other provided theme, in address bar, add &lt;code&gt;?theme=sky&lt;/code&gt; after the &lt;code&gt;filename.slides.html&lt;/code&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;other theme options: simple (default), sky, beige, solarized, serif, night, moon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to change the default transition to other provided way, same as changing the theme, add &lt;code&gt;?transition=convex&lt;/code&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;other transition options: none, fade, slide, convex, concave, zoom&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if the themes still not meet your ideal slides, add a file in the same directory name &lt;code&gt;custom.css&lt;/code&gt;, use this to alter the looks of the page, font style etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Taada&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;iframe width="800" height="600" src="/assets/ipyslides/testing_slides.slides.html?theme=sky?transition=convex" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="ipython"></category></entry><entry><title>Adding math formula</title><link href="https://wcchin.github.io/adding-math-formula.html" rel="alternate"></link><published>2015-08-21T00:00:00+08:00</published><updated>2015-08-21T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-08-21:/adding-math-formula.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Testing &lt;a href="https://www.mathjax.org" target="_blank"&gt;MathJax&lt;/a&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$ GPR_{t}A = W_{AB} \times \frac{GPR_{t-1}B}{out_B} $$&lt;/div&gt;
&lt;p&gt;The "installing" steps is simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;include the CDN in &lt;head&gt; ... &lt;/head&gt;, in the case of mynt's quick start template, this could be added in the page.header.html file.&lt;/li&gt;
&lt;li&gt;type the formula in tex's syntax, using the double $ as …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Testing &lt;a href="https://www.mathjax.org" target="_blank"&gt;MathJax&lt;/a&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$ GPR_{t}A = W_{AB} \times \frac{GPR_{t-1}B}{out_B} $$&lt;/div&gt;
&lt;p&gt;The "installing" steps is simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;include the CDN in &lt;head&gt; ... &lt;/head&gt;, in the case of mynt's quick start template, this could be added in the page.header.html file.&lt;/li&gt;
&lt;li&gt;type the formula in tex's syntax, using the double $ as the entering and exiting characters, so that the formula is between double $ pair. &lt;/li&gt;
&lt;li&gt;note that in default setting, the inline math mode is not supported, namely the single $ pair. To use this, some code is needed to be added to overwrite this setting. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;note: I tried to install the mathjax js in asset, and it is simple and worked. But, the generating time becomes longer, like a few seconds, maybe is because of the files that come with the js are quite large. So, I changed back to use the officially provided CDN. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="webpage"></category></entry><entry><title>Adding commenting system</title><link href="https://wcchin.github.io/adding-commenting-system.html" rel="alternate"></link><published>2015-08-20T00:00:00+08:00</published><updated>2015-08-20T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-08-20:/adding-commenting-system.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;In order to get feedbacks from friends, I added the Disqus commenting system in this site.&lt;/p&gt;
&lt;p&gt;Adding a Disqus comment system in a static website is not difficult:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign-up on &lt;a href="https://disqus.com" target="_blank"&gt;Disqus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go to Settings, Admin.&lt;/li&gt;
&lt;li&gt;Add new site and setup.&lt;/li&gt;
&lt;li&gt;Go to Install, Universal Code, and copy the codes to …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;In order to get feedbacks from friends, I added the Disqus commenting system in this site.&lt;/p&gt;
&lt;p&gt;Adding a Disqus comment system in a static website is not difficult:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign-up on &lt;a href="https://disqus.com" target="_blank"&gt;Disqus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go to Settings, Admin.&lt;/li&gt;
&lt;li&gt;Add new site and setup.&lt;/li&gt;
&lt;li&gt;Go to Install, Universal Code, and copy the codes to the template/layout html file.&lt;/li&gt;
&lt;li&gt;Regenerate the website, and push to the hosting server.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thats all.&lt;/p&gt;</content><category term="webpage"></category></entry><entry><title>First post of the mini-lab</title><link href="https://wcchin.github.io/first-post-of-the-mini-lab.html" rel="alternate"></link><published>2015-08-03T00:00:00+08:00</published><updated>2015-08-03T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-08-03:/first-post-of-the-mini-lab.html</id><summary type="html">&lt;hr&gt;
&lt;h5&gt;Welcome to &lt;a href="https://wcchin.github.io" target="_blank"&gt;Benny.mini-lab&lt;/a&gt;.&lt;/h5&gt;
&lt;p&gt;This is a place for storing what has come to my mind, and what I've done&lt;/p&gt;
&lt;p&gt;I created this website using the &lt;a href="http://mynt.uhnomoli.com" target="_blank"&gt;mynt&lt;/a&gt;, a static site generator using python and jinja.&lt;/p&gt;
&lt;p&gt;The style of the website is inspired by the &lt;a href="http://leafletjs.com" target="_blank"&gt;leafletjs&lt;/a&gt; and &lt;a href="http://getskeleton.com" target="_blank"&gt;skeleton&lt;/a&gt; website. These websites …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h5&gt;Welcome to &lt;a href="https://wcchin.github.io" target="_blank"&gt;Benny.mini-lab&lt;/a&gt;.&lt;/h5&gt;
&lt;p&gt;This is a place for storing what has come to my mind, and what I've done&lt;/p&gt;
&lt;p&gt;I created this website using the &lt;a href="http://mynt.uhnomoli.com" target="_blank"&gt;mynt&lt;/a&gt;, a static site generator using python and jinja.&lt;/p&gt;
&lt;p&gt;The style of the website is inspired by the &lt;a href="http://leafletjs.com" target="_blank"&gt;leafletjs&lt;/a&gt; and &lt;a href="http://getskeleton.com" target="_blank"&gt;skeleton&lt;/a&gt; website. These websites showed the beauty and power of simplicity. 
This website's template was modified from the mynt's &lt;em&gt;init&lt;/em&gt; site with the skeleton css.&lt;/p&gt;
&lt;p&gt;Currently, the &lt;a href="/pages/about-the-mini-lab-and-i.html"&gt;about&lt;/a&gt; page was done. Two published paper that I have a little contribution were added in the &lt;a href="/category/publication.html"&gt;Publications&lt;/a&gt; page.
The other pages will be fill-in while I am working.&lt;/p&gt;
&lt;p&gt;Thanks for visiting.&lt;/p&gt;</content><category term="webpage"></category></entry><entry><title>Incorporation of Spatial Interactions in Location Networks to Identify Critical Geo-Referenced Routes for Assessing Disease Control Measures on a Large-Scale Campus</title><link href="https://wcchin.github.io/incorporation-of-spatial-interactions-in-location-networks-to-identify-critical-geo-referenced-routes-for-assessing-disease-control-measures-on-a-large-scale-campus.html" rel="alternate"></link><published>2015-01-01T00:00:00+08:00</published><updated>2015-01-01T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2015-01-01:/incorporation-of-spatial-interactions-in-location-networks-to-identify-critical-geo-referenced-routes-for-assessing-disease-control-measures-on-a-large-scale-campus.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &amp;amp; &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; (2015). Incorporation of Spatial Interactions in Location Networks to Identify Critical Geo-Referenced Routes for Assessing Disease Control Measures on a Large-Scale Campus. International journal of environmental research and public health, 12(4), 4170-4184.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Respiratory diseases mainly spread through interpersonal contact. Class suspension …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Wen, T. H., &amp;amp; &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt; (2015). Incorporation of Spatial Interactions in Location Networks to Identify Critical Geo-Referenced Routes for Assessing Disease Control Measures on a Large-Scale Campus. International journal of environmental research and public health, 12(4), 4170-4184.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Respiratory diseases mainly spread through interpersonal contact. Class suspension is the most direct strategy to prevent the spread of disease through elementary or secondary schools by blocking the contact network. However, as university students usually attend courses in different buildings, the daily contact patterns on a university campus are complicated, and once disease clusters have occurred, suspending classes is far from an efficient strategy to control disease spread. The purpose of this study is to propose a methodological framework for generating campus location networks from a routine administration database, analyzing the community structure of the network, and identifying the critical links and nodes for blocking respiratory disease transmission. The data comes from the student enrollment records of a major comprehensive university in Taiwan. We combined the social network analysis and spatial interaction model to establish a geo-referenced community structure among the classroom buildings. We also identified the critical links among the communities that were acting as contact bridges and explored the changes in the location network after the sequential removal of the high-risk buildings. Instead of conducting a questionnaire survey, the study established a standard procedure for constructing a location network on a large-scale campus from a routine curriculum database. We also present how a location network structure at a campus could function to target the high-risk buildings as the bridges connecting communities for blocking disease transmission.&lt;/p&gt;
&lt;h5&gt;Keywords&lt;/h5&gt;
&lt;p&gt;network analysis; community structure; spatial interaction; respiratory disease transmission&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mdpi.com/1660-4601/12/4/4170/htm" target="_blank"&gt;Link&lt;/a&gt;&lt;/p&gt;</content><category term="diffusion"></category><category term="network"></category></entry><entry><title>考量地理特性的 PageRank 演算法： 評估地理網絡節點之重要性</title><link href="https://wcchin.github.io/kao-liang-di-li-te-xing-de-pagerank-yan-suan-fa-ping-gu-di-li-wang-luo-jie-dian-zhi-zhong-yao-xing.html" rel="alternate"></link><published>2014-04-26T00:00:00+08:00</published><updated>2014-04-26T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2014-04-26:/kao-liang-di-li-te-xing-de-pagerank-yan-suan-fa-ping-gu-di-li-wang-luo-jie-dian-zhi-zhong-yao-xing.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Geographically modified PageRank algorithms: Measuring the importance of nodes in a geospatial network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 中國地理學會年會&lt;/li&gt;
&lt;li&gt;Year: 2014&lt;/li&gt;
&lt;li&gt;Location: 國立台灣大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;This study aims to proposed two geographically modified diffusion-based algorithms, to figure out where people live their lives. Since human movements …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Geographically modified PageRank algorithms: Measuring the importance of nodes in a geospatial network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 中國地理學會年會&lt;/li&gt;
&lt;li&gt;Year: 2014&lt;/li&gt;
&lt;li&gt;Location: 國立台灣大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;This study aims to proposed two geographically modified diffusion-based algorithms, to figure out where people live their lives. Since human movements reflects the locations where the daily lives of people occurred, a transportation network, which represent how places connect with each other by transportation system, could be used to uncover the spatial distribution pattern of the people’s daily lives. PageRank (PR), a successful diffusion-based algorithm, is what Google uses to determine how important a webpage is on the World Wide Web. However, most measures of network analysis, including PR, were designed to understand network topological structures rather than geographical structures. In other words, these measures have not considered the geographical constraints as their main concern. This study incorporates geographic properties, including distance-decay and gravity model among nodes, and proposes two modified PR algorithms, the Inversed-Distance PageRank (IDPR), and Geographical PageRank (GPR). To test the performance of the IDPR and GPR, this study calculated the IDPR and GPR for the inter-city network of Taiwan. Then, we used the population data and inter-townships car flow data as observed data to understand the correlation between them, and compared the correlation results with the correlations calculated with the existing algorithms, including PR and Weighted PageRank (WPR), and three centrality measurements, including degree, closeness, and betweenness. The results showed that IDPR and GPR are better correlated with the observed data. Since IDPR and GPR take the distance decay effect into account, results using the algorithms can capture more geographical properties. In conclusion, while dealing with a geographical issue, which distance decay effect existed, IDPR and GPR are better algorithms to be used in the analysis.&lt;/p&gt;
&lt;h4&gt;Keywords&lt;/h4&gt;
&lt;p&gt;PageRank, distance decay, gravity model, geospatial network&lt;/p&gt;
&lt;h4&gt;摘要:&lt;/h4&gt;
&lt;p&gt;本研究旨在提出兩個以地理特性修改之擴散式演算法,以討論人的生活環境空間的分佈。因人的生活的所在空間可以透過人的移動所反映,反應地方之間如何相連的交通網絡可以用以揭示人類生活空間的空間分佈形態。PageRank (PR),是一個擴散式演算法,其是 Google 搜尋引擎背後從網際網路中找出重要網頁的主要演算法。然而,大多數網絡分析的評量方法,包括 PR,皆以分析網絡拓撲結構為主要目的,而地理結構則並非其主要分析目的。換言之,這些評量方法並沒有將地理的限制納入其分析的考量。因此,本研究將地理特性,包括地方與地方之間的互動強度的距離遞減效果及引力模型特性與PageRank 演算法做整合,並提出兩個地理特性修改之 PageRank 演算法,包括Inversed-Distance PageRank (IDPR), 及 Geographical PageRank (GPR)。為了解IDPR 及 GPR 捕捉重要節點之能力,本研究將人口及城際運輸流量資料作為觀察資料,與計算所得之 IDPR 及 GPR 的結果做相關分析,並與已存在的 PR 及Weighted PageRank (WPR) ,及傳統網絡分析之中心性指標 (centrality) 之相關分析結果做比較。結果顯示,IDPR 及 GPR 與觀察資料有較高的相關性。因 IDPR及 GPR 都有考量距離遞減效果,因此其能夠捕捉較多的地理特性以運用於演算法中,並產出具考量地理特性之重要性分佈的結果。因此,當我們在討論具有地理特性之議題並分析其地理空間網絡時,IDPR 與 GPR 是較好的演算法。&lt;/p&gt;
&lt;h3&gt;關鍵字&lt;/h3&gt;
&lt;p&gt;PageRank, 距離遞減, 引力模型, 地理空間網絡&lt;/p&gt;
&lt;h4&gt;Presentation -&lt;/h4&gt;
&lt;p&gt;&lt;a href="svgs/geogsoc_2014.svg" target="blank"&gt; 研討會簡報檔 &lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;點擊滑鼠左鍵下一頁，右鍵上一頁，中鍵(滾輪)大綱跳頁
&lt;object id="svg1" data="svgs/geogsoc_2014.svg" type="image/svg+xml" style="width: 650px; height: 480px"&gt;&lt;/object&gt;   &lt;/p&gt;</content><category term="network"></category><category term="pagerank"></category></entry><entry><title>An Experiment to Model Spatial Diffusion Process with Nearest Neighbor Analysis and Regression Estimation</title><link href="https://wcchin.github.io/an-experiment-to-model-spatial-diffusion-process-with-nearest-neighbor-analysis-and-regression-estimation.html" rel="alternate"></link><published>2014-01-01T00:00:00+08:00</published><updated>2014-01-01T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2014-01-01:/an-experiment-to-model-spatial-diffusion-process-with-nearest-neighbor-analysis-and-regression-estimation.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Lee, J., Lay, J. G., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, Chi, Y. L., &amp;amp; Hsueh, Y. H. (2014). An Experiment to Model Spatial Diffusion Process with Nearest Neighbor Analysis and Regression Estimation. International Journal of Applied Geospatial Research (IJAGR), 5(1), 1-15.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Spatial diffusion processes can be seen in many geographic …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Lee, J., Lay, J. G., &lt;strong&gt;Chin, W. C. B.&lt;/strong&gt;, Chi, Y. L., &amp;amp; Hsueh, Y. H. (2014). An Experiment to Model Spatial Diffusion Process with Nearest Neighbor Analysis and Regression Estimation. International Journal of Applied Geospatial Research (IJAGR), 5(1), 1-15.&lt;/p&gt;
&lt;h5&gt;Abstract&lt;/h5&gt;
&lt;p&gt;Spatial diffusion processes can be seen in many geographic phenomena that spread or migrate across space and over time. Studies of these processes were mostly done with verbal description until Hägerstrand (1966) started to approach it with quantitative models. A variety of attempts were made to continue this effort, but only with various degrees of success. Recognizing the critical role that distances between geographic objects or events play in a spatial diffusion process, we experimented with a new approach that uses these distances to detect and distinguish different types of spatial diffusion processes. Our approach is a two-step process that first calculates nearest neighbor ratios in a point process at each time step and then applies regression curve estimation to observe how these ratios change over time. We first report the results from applying this method to three spatio-temporal data sets which show the feasibility of our approach. We then report results of randomly simulated spatial diffusion processes to see if our approach is effective for the purpose of distinguishing different types of spatial diffusion processes. With only extreme cases as exceptions, our experiment found that using estimated regression curves of nearest neighbor ratios over time is usable in classifying spatial diffusion processes to either contagious/expansion or hierarchical/relocation diffusion processes.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.igi-global.com/article/an-experiment-to-model-spatial-diffusion-process-with-nearest-neighbor-analysis-and-regression-estimation/106919" target="_blank"&gt;Link&lt;/a&gt;&lt;/p&gt;</content><category term="diffusion"></category></entry><entry><title>Geographically modified PageRank Algorithm: Measuring the importance of nodes in a geospatial network</title><link href="https://wcchin.github.io/geographically-modified-pagerank-algorithm-measuring-the-importance-of-nodes-in-a-geospatial-network.html" rel="alternate"></link><published>2013-04-09T00:00:00+08:00</published><updated>2013-04-09T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2013-04-09:/geographically-modified-pagerank-algorithm-measuring-the-importance-of-nodes-in-a-geospatial-network.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Geographically modified PageRank Algorithm: Measuring the importance of nodes in a geospatial network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: AAG Annual Meeting&lt;/li&gt;
&lt;li&gt;Year: 2013&lt;/li&gt;
&lt;li&gt;Location: Los Angeles, California, USA&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;A geospatial network represents the spatial relationships with the network perspective.  Within the scope of social network analysis …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Geographically modified PageRank Algorithm: Measuring the importance of nodes in a geospatial network&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: AAG Annual Meeting&lt;/li&gt;
&lt;li&gt;Year: 2013&lt;/li&gt;
&lt;li&gt;Location: Los Angeles, California, USA&lt;/li&gt;
&lt;li&gt;Language: English&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;A geospatial network represents the spatial relationships with the network perspective.  Within the scope of social network analysis, the network topology characteristics, including network centrality, small world and scale-free properties, have been well studied, and these concepts can also provide important implications on measuring the important of places in the geospatial network. However, most measures of social network analysis were designed to understand network topological structures rather than geographical structures. Therefore, these measures have not considered the geographical relationships as their main concern, including geographical distance between nodes and distance-decay property. PageRank, a link analysis algorithm, is what Google uses to determine how important a page is on the web. This study incorporates geographic properties, including distance-decay and spatial interactions among nodes, with traditional PageRank algorithm and proposes two modified PageRank algorithms, Distance-Inverse PageRank (DiPR) and Geographical PageRank (GPR), and compared the performance with existing algorithms: PageRank and Weighted PageRank. We demonstrate the use of these four algorithms with Taiwan city network, and compare our calculation results with existing network centrality metrics (degree, betweenness, closeness and eigenvector). Then, we calculated the Spearman's rho between our calculation results and population and transportation flow data. Our findings show that DiPR and GPR are better correlated to population distribution and transportation flow than other metrics.  Since DiPR and GPR take the distance decay effect into account, results using the algorithms can capture more geographical properties. Our findings suggest that DiPR and GPR are better metrics to be used in geospatial network analysis.&lt;/p&gt;
&lt;h4&gt;Keywords&lt;/h4&gt;
&lt;p&gt;distance decay, spatial interaction, PageRank, social network analysis, geospatial network &lt;/p&gt;
&lt;h4&gt;Link&lt;/h4&gt;
&lt;p&gt;http://meridian.aag.org/callforpapers/program/AbstractDetail.cfm?AbstractID=51232&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://prezi.com/ccz0fhq00yun/?utm_campaign=share&amp;amp;utm_medium=copy&amp;amp;rc=ex0share&lt;/p&gt;
&lt;iframe id="iframe_container" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" width="550" height="400" src="https://prezi.com/embed/65e65d6d006c32ed7ba8009c571e9141996adddc/?bgcolor=ffffff&amp;amp;lock_to_path=0&amp;amp;autoplay=0&amp;amp;autohide_ctrls=0&amp;amp;landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5Z1RMM0llb3RpNzFhOVBMZmRuVDhCdjJBPT0&amp;amp;landing_sign=7sGHmctsFT0dhKkpZAqY4cfy3cxQv1qrrYK-4YXYfJI"&gt;&lt;/iframe&gt;</content><category term="network"></category><category term="pagerank"></category></entry><entry><title>整合PageRank與空間互動模型於網絡都市的拓樸動態分析</title><link href="https://wcchin.github.io/zheng-he-pagerankyu-kong-jian-hu-dong-mo-xing-yu-wang-luo-du-shi-de-tuo-pu-dong-tai-fen-xi.html" rel="alternate"></link><published>2012-04-21T00:00:00+08:00</published><updated>2012-04-21T00:00:00+08:00</updated><author><name>Benny Chin</name></author><id>tag:wcchin.github.io,2012-04-21:/zheng-he-pagerankyu-kong-jian-hu-dong-mo-xing-yu-wang-luo-du-shi-de-tuo-pu-dong-tai-fen-xi.html</id><summary type="html">&lt;hr&gt;
&lt;h4&gt;Integration of PageRank and Spatial Interaction Modeling to Analyze Topological Dynamics of Networked Cities&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 中國地理學會年會&lt;/li&gt;
&lt;li&gt;Year: 2012&lt;/li&gt;
&lt;li&gt;Location: 中國文化大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;This paper used PageRank concept to analyse cities network, to understand the shift of network cities’ position after the construction …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h4&gt;Integration of PageRank and Spatial Interaction Modeling to Analyze Topological Dynamics of Networked Cities&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Conference: 中國地理學會年會&lt;/li&gt;
&lt;li&gt;Year: 2012&lt;/li&gt;
&lt;li&gt;Location: 中國文化大學，台北市,台灣&lt;/li&gt;
&lt;li&gt;Language: Mandarin&lt;/li&gt;
&lt;li&gt;Authors: Wei-Chien Benny-Chin, Tzai-Hung Wen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Abstract&lt;/h4&gt;
&lt;p&gt;This paper used PageRank concept to analyse cities network, to understand the shift of network cities’ position after the construction of Taiwan High-Speed-Rail (THSR). The integration of network analysis and spatial analysis shows advantages in capturing transitive effect and spatial dependence effect, which has made the cities spatial interaction modeling analysis could better represent the interactive relationship between cities. THSR is an important development in recent year, which across several counties in Taiwan, and has caused significant changes and affects on the interactions between regionals. Thus, this paper focuses on changes in internal structure of cities network’s topological dynamics after the construction of THSR. This paper was divided into 3 parts: in the first part, we constructed 2 sets of cities network as relationships of cities before and after the THSR, and analysed these networks with PageRank, Weighted PageRank, Distance-Inverse PageRank, Gravity PageRank; in the second part, we try to compare the distribution of the change of rank after the construction of THSR between these models; finally, we used Dual Kernel Density Estimation to analyse spatial-temporal changes of rank after the construction of THSR. In conclusion, we found that the results of 4 models varied between each other, which suggested these models could capture different characteristics and effects of cities network.  &lt;/p&gt;
&lt;h4&gt;Keywords&lt;/h4&gt;
&lt;p&gt;Cities network analysis, network topological dynamic, Taiwan High Speed Rail, PageRank, Weighted PageRank&lt;/p&gt;
&lt;h4&gt;摘要:&lt;/h4&gt;
&lt;p&gt;本文以PageRank的網絡分析方法，分析各都市的網絡結構，以了解在高鐵的建設前後，都市在網絡中的地位之空間分佈及變化趨勢。網絡分析與地理空間分析的整合可以同時捕捉網絡的遞移性與空間的地緣效果，因此空間互動模型分析可以更有效的反映都市間的互動關係。高鐵的建設是台灣近期跨數個縣市的重大發展之一，其對台灣各區域的互動關係造成大幅度的變化及影響。因此，本文著重討論高鐵建設前後，都市網絡內在結構的拓撲動態，及其對城市排名變化趨勢的影響。本研究分為三個部分，第一部分為建立兩組網絡，分別為高鐵建設前的都市網絡及高鐵建設後的都市網絡，並以 PageRank、Weighted PageRank、及加入距離遞減概念的Distance Inverse PageRank、與整合引力模型概念的Gravity PageRank，對兩組都市網絡拓撲結構進行分析；第二部分對城市節點的分數進行排序以討論高鐵興建前後的城市排名變化趨勢；第三部分以Dual Kernel Density Estimation 對兩組網絡的地位分佈進行時空變遷分析。上述分析結果顯示，高鐵的建設在四種指標所反映的狀況並不相同，各指標所呈現及捕捉的效果也有所不同。&lt;/p&gt;
&lt;h3&gt;關鍵字&lt;/h3&gt;
&lt;p&gt;都市網絡分析,網絡拓撲動態,台灣高鐵,PageRank,Weighted PageRank&lt;/p&gt;
&lt;h4&gt;Presentation&lt;/h4&gt;
&lt;p&gt;http://www.slideshare.net/BennyChin4/page-rank-70015993&lt;/p&gt;
&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/LfHjwgB2Uy72cN" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen&gt; &lt;/iframe&gt;

&lt;p&gt;&lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; &lt;a href="//www.slideshare.net/BennyChin4/page-rank-70015993" title="整合Page rank 與空間互動模型於網絡都市的拓撲分析" target="_blank"&gt;整合Page rank 與空間互動模型於網絡都市的拓撲分析&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target="_blank" href="//www.slideshare.net/BennyChin4"&gt;Benny Chin&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;</content><category term="network"></category><category term="pagerank"></category></entry></feed>